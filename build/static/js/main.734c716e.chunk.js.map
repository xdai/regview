{"version":3,"sources":["serviceWorker.js","components/Page404.js","components/Converter.js","components/Form.js","components/Utils.js","RegDb.js","components/DataPicker.js","components/GroupViewer.js","components/RegContainer.js","components/RegisterViewer.js","components/GroupEditor.js","components/RegEditor.js","components/NavBar.js","components/Regview.js","index.js"],"names":["Boolean","window","location","hostname","match","Page404","react_default","a","createElement","Component","siglofyName","name","replace","trim","split","map","s","charAt","toUpperCase","slice","toLowerCase","join","classifyName","forEachNode","data","rootKey","func","root","node","address","children","forEach","childKey","forEachGroup","endsWith","forEachRegister","convertToJson","obj","key","push","JSON","stringify","convertToMacro","result","nodeName","concat","desc_short","offset","fields","field","fieldName","bits","convertToTemplate","getLevel","parentName","level","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","getEnclosingName","filter","i","getFactoryName","path","splitKey","getClasslName","child","parent","className","enclosingName","baseClassName","toString","parseInt","size","convertToCpp","segs","length","getClasslNameLong","hasSymbolicValue","symbolic","valueType","runtimeAddress","constNess","classNameLong","factoryName","methodName","meaning","convertTo","format","converter","json","handle","descripton","macro","template","C++","description","Warning","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","props","Keyword","_Component2","NameInput","_Component3","assign","type","Exporter","_Component4","_getPrototypeOf2","_this","_len","args","Array","_key","call","saveAs","content","filename","dataStr","encodeURIComponent","downloadAnchorNode","document","setAttribute","body","appendChild","click","remove","exportAs","regDb","getHierarchy","then","_this2","onClick","Deleter","_Component5","_this3","deleteHierarchy","confirm","delete","setState","deleted","state","prevProps","_splitKey","parentKey","slicedToArray","Redirect","to","num2hexstr","n","substr","getCoordinate","width","Math","floor","isInRange","range","parsePath","m","Error","_m$slice","_m$slice2","withReload","WrappedComponent","_temp","load","asyncToGenerator","regenerator_default","mark","_callee","_parsePath","_parsePath2","op","wrap","_context","prev","pathname","loadContent","sent","error","t0","count","stop","_ref2","_callee2","_context2","abrupt","getSubTree","get","_x","_x2","Form_Warning","Form_Keyword","React","createContext","dbCache","RegDb","import","_ref","str","transaction","tx","db","store","dbPromise","objectStore","parse","entry","add","reload","complete","_ref3","_callee3","rawData","_context3","getAll","_x3","_ref4","_callee4","_context4","_x4","getChildren","_ref5","_callee5","index","val","_context5","setDbBusy","sort","b","_x5","_ref6","_callee6","_context6","hasOwnProperty","_x6","_x7","loadWithFilter","_ref7","_callee7","elmKey","_elmKey","_context7","keyA","keyB","_x8","_x9","_ref8","_callee8","tree","_context8","startsWith","_x10","_x11","_ref9","_callee9","hierarchy","_context9","entryKey","_x12","_x13","_ref10","_callee10","exist","_context10","_x14","_x15","set","_ref11","_callee13","newParent","newName","newKey","newParentEntry","parentEntry","update","move","applyOffset","_context13","_ref12","_callee11","_context11","put","_x19","_x20","_ref13","_callee12","dstKey","srcKey","_splitKey2","dstParentKey","dstName","childEntry","_newKey","_context12","_x21","_x22","splice","indexOf","_x16","_x17","_x18","_ref14","_callee15","_delete","_context15","_ref15","_callee14","_context14","_x25","_x23","_x24","reset","_ref16","_callee16","_context16","_x26","reduce","curr","parseAddress","base","indexedDB","openDb","upgradeDb","objectStoreNames","contains","createObjectStore","createIndex","unique","alert","DataPicker","startFresh","importData","e","file","fileRef","current","files","reader","FileReader","onload","readAsText","createRef","ref","onChange","GroupTitle","Link","RegTitle","reg","Group","GroupViewer_RegTitle","react","GroupViewer_GroupTitle","GroupViewer","GroupViewer_Group","UnusedField","p","w","fragments","low","high","pos","min","row","col","RegContainer_FieldFragment","valid","Field","readonly","renderMode","onStartUpdating","_getCoordinate","_getCoordinate2","FieldFragment","fragStyle","gridRow","gridColumnStart","gridColumnEnd","style","BitPosMarker","marker","ByteOffset","offsets","step","labelLow","labelHigh","RegContainer","_Component6","RegContainer_BitPosMarker","RegContainer_ByteOffset","RegisterViewer","onInputChange","target","defineProperty","decode","re","test","decodeString","decodeArray","decodeError","parseField","shiftFocus","newFocus","focus","shift","console","log","getDescription","desc_long","getRegMap","RegContainer_UnusedField","RegContainer_Field","RegContainer_RegContainer","getFieldTable","rows","extraHeader","colSpan","values","otherVal","highlight","fieldVal","symbolics","v","getDecodeForm","GroupEditor","validate","validator","prop","rv","_this$setState","commitChange","catch","message","Form_NameInput","required","disabled","MaxRegSize","RegEditor","canSubmit","addField","toConsumableArray","updateField","newFields","idx","findIndex","deleteField","onEditingField","isEditing","isEditingField","submitBtn","placeholder","max","RegEditor_FieldEditor","onEditing","FieldEditor","mode","begin","end","field_name","field_desc","field_value","symbolic_name","symbolic_value","canAddField","ra","rb","isUpdatingField","setFieldRange","trySetFieldRange","_this2$setState","onAddField","el","pow","onEndUpdating","onCancelEditing","onDeleteField","onAddFieldValue","find","NaN","isNaN","prevState","onDeleteFieldValue","forEachField","action","forEachBit","isAddingField","form","submitBtnText","submitBtnAction","RegEditor_Bit","cancelBtn","deleteBtn","Bit","_this4","onHover","bitStyle","onMouseOver","library","faHome","faBars","DropdownMenu","react_fontawesome_index_es","icon","NavBar","getBreadcrumb","isGroup","pop","links","dest","NavLink","getActions","actions","Form_Deleter","Form_Exporter","NavBar_DropdownMenu","render","Regview","Route","component","Switch","exact","ReactDOM","HashRouter","src_components_Regview","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.734c716e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\n\r\n//------------------------------------------------------------\r\nclass Page404 extends Component {\r\n\trender() {\r\n\t\treturn ( \r\n\t\t\t<div>\r\n\t\t\t\t<h1>404</h1>\r\n\t\t\t\t<p>SIGLO yells to EEUW: \"404: Ender not found!\"</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Page404;\r\n","import { splitKey } from './Utils';\r\n\r\nlet siglofyName = (name) => {\r\n    return name.replace(/[^a-zA-Z0-9]+/gi, ' ').trim().split(' ').map(\r\n        s => s.charAt(0).toUpperCase() + s.slice(1).toLowerCase()\r\n    ).join('');\r\n}\r\n\r\nlet classifyName = (name) => {\r\n    return siglofyName(name) + 'Type';\r\n}\r\n\r\nlet forEachNode = (data, rootKey, func) => {\r\n    const root = data[rootKey];\r\n    func(root.node, root.address, root.children);\r\n    root.children.forEach(childKey => forEachNode(data, childKey, func));\r\n}\r\n\r\nlet forEachGroup = (data, rootKey, func) => {\r\n    forEachNode(data, rootKey, (node, address, children) => {\r\n        if (node.name.endsWith('/')) {\r\n            func(node, address, children);\r\n        }\r\n    });\r\n}\r\n\r\nlet forEachRegister = (data, rootKey, func) => {\r\n    forEachNode(data, rootKey, (node, address, children) => {\r\n        if (!node.name.endsWith('/')) {\r\n            func(node, address, children);\r\n        }\r\n    });\r\n}\r\n\r\nlet convertToJson = (data) => {\r\n    const obj = [];\r\n    for (let key in data) {\r\n        obj.push(data[key].node);\r\n    }\r\n\r\n    return JSON.stringify(obj, null, 2);\r\n}\r\n\r\nlet convertToMacro = (data) => {\r\n    let result = '';\r\n\r\n    forEachRegister(data, '/', (node) => {\r\n        const nodeName = siglofyName(node.name)\r\n        \r\n        result += `// ${node.desc_short}\\n`;\r\n        result += `NN_USB_DEFINE_REG_OFFSET ( ${nodeName}, ${node.offset} );\\n`;\r\n        \r\n        node.fields.forEach((field) => {\r\n            const fieldName = siglofyName(field.name);\r\n            \r\n            result += `NN_USB_DEFINE_FIELD32    ( ${nodeName}, ${fieldName}, ${field.bits[1]}, ${field.bits[0]} );\\n`;\r\n        });\r\n        \r\n        result += '\\n';\r\n    })\r\n    \r\n    return result;\r\n}\r\n\r\n// The scheme generated by this method is deprecated now.\r\n// Please see convertToCpp() below for the current scheme.\r\nlet convertToTemplate = (data) => {\r\n    let result = '';\r\n    \r\n    // BOM\r\n    // result += '\\357\\273\\277';\r\n\r\n    // Copyright\r\n    result += \"/*--------------------------------------------------------------------------------*\\n\";\r\n    result += \"  Copyright (C)Nintendo All rights reserved.\\n\";\r\n    result += \"\\n\";\r\n    result += \"  These coded instructions, statements, and computer programs contain proprietary\\n\";\r\n    result += \"  information of Nintendo and/or its licensed developers and are protected by\\n\";\r\n    result += \"  national and international copyright laws. They may not be disclosed to third\\n\";\r\n    result += \"  parties or copied or duplicated in any form, in whole or in part, without the\\n\";\r\n    result += \"  prior written consent of Nintendo.\\n\";\r\n    result += \"\\n\";\r\n    result += \"  The content herein is highly confidential and should be handled accordingly.\\n\";\r\n    result += \" *--------------------------------------------------------------------------------*/\\n\";\r\n\r\n    // Nolint\r\n    result += \"\\n\";\r\n    result += \"// NOLINT(build/header_guard)\\n\";\r\n    result += \"\\n\";\r\n\r\n    let getLevel = (parentName) => {\r\n        try {\r\n            let level = 0;\r\n            for (let c of parentName) {\r\n                if (c === '/') {\r\n                    level += 1;\r\n                }\r\n            }\r\n            return level;\r\n        } catch (err) {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    let getEnclosingName = (parentName) => {\r\n        return parentName.slice(1, -1).split('/').filter(s => s !== '').map((s, i) => `M${siglofyName(s)}<AddressPolicy${i+1}>`).join('::');\r\n    };\r\n\r\n    let getFactoryName = (path) => {\r\n        return siglofyName(splitKey(path)[1]);\r\n\r\n    };\r\n\r\n    let getClasslName = (path) => {\r\n        return \"M\" + getFactoryName(path);\r\n    };\r\n\r\n    const rootClassName = 'Register';\r\n\r\n    result += `class ${rootClassName} {\\n`;\r\n    result += `public:\\n`;\r\n    result += `    static const uintptr_t g_Address = 0;\\n`;\r\n    result += `\\n`;\r\n    result += `private:\\n`;\r\n    data['/'].children.forEach((child) => {\r\n        result += `    template <template<uintptr_t> class AddressPolicy> class ${getClasslName(child)};\\n`;\r\n    });\r\n    result += `\\n`;\r\n    result += `public:\\n`;\r\n    data['/'].children.forEach((child) => {\r\n        result += `\\n`;\r\n        result += `    /*\\n`;\r\n        result += `     * Child: ${child}\\n`;\r\n        result += `     */\\n`;\r\n        result += `\\n`;\r\n        result += `    template <template<uintptr_t> class AddressPolicy = Fixed>\\n`;\r\n        result += `    static ${getClasslName(child)}<AddressPolicy> ${getFactoryName(child)}();\\n`;\r\n        result += `\\n`;\r\n        result += `    template <template<uintptr_t> class AddressPolicy>\\n`;\r\n        result += `    static ${getClasslName(child)}<AddressPolicy> ${getFactoryName(child)}(uintptr_t n);\\n`;\r\n        \r\n    });\r\n    result += `};\\n`;\r\n\r\n    forEachGroup(data, '/', (node, address, children) => {\r\n        if (!node.parent) {\r\n            return;\r\n        }\r\n\r\n        const level = getLevel(node.parent);\r\n        const className = level ? getClasslName(node.parent + node.name) : rootClassName;\r\n        const enclosingName = rootClassName + (getEnclosingName(node.parent) ? '::' + getEnclosingName(node.parent) : '');\r\n        const baseClassName = `AddressPolicy${level}<0x${address.toString(16)}>`;\r\n\r\n        result += `\\n`;\r\n        result += `/*\\n`;\r\n        result += ` * ${(node.parent || \"\") + node.name}\\n`;\r\n        result += ` *   - Base:    0x${(address - parseInt(node.offset, 16)).toString(16)}\\n`\r\n        result += ` *   - Offset:  0x${node.offset}\\n`;\r\n        result += ` *   - Address: 0x${address.toString(16)}\\n`;\r\n        result += ` */\\n`;\r\n\r\n        \r\n        for (let i = 1; i <= level; i++) {\r\n            result += `template <template<uintptr_t> class AddressPolicy${i}>\\n`;\r\n        }\r\n        result += `class ${enclosingName}::${className} : public ${baseClassName} {\\n`;\r\n        result += `public:\\n`;\r\n        result += `    typedef ${enclosingName} ParentType;\\n`;\r\n        result += `    typedef ${baseClassName} BaseType;\\n`;\r\n        result += `    static const uintptr_t g_Offset = 0x${node.offset};\\n`;\r\n        result += `    static const uintptr_t g_Address = ParentType::g_Address + g_Offset;\\n`;\r\n        \r\n        result += `\\n`;\r\n        result += `private:\\n`;\r\n        children.forEach((child) => {\r\n            result += `    template <template<uintptr_t> class AddressPolicy> class ${getClasslName(child)};\\n`;\r\n        });\r\n        \r\n        result += `\\n`;\r\n        result += `public:\\n`;\r\n        result += `    explicit ${className}(uintptr_t n)\\n`;\r\n        result += `        : BaseType(n)\\n`;\r\n        result += `    {\\n`;\r\n        result += `    }\\n`;\r\n        \r\n        children.forEach((child) => {\r\n            result += `\\n`;\r\n            result += `    /*\\n`;\r\n            result += `     * Child: ${child}\\n`;\r\n            result += `     */\\n`;\r\n            result += `\\n`;\r\n            result += `    template <template<uintptr_t> class AddressPolicy = Fixed>\\n`;\r\n            result += `    ${getClasslName(child)}<AddressPolicy> ${getFactoryName(child)}() const ;\\n`;\r\n            result += `\\n`;\r\n            result += `    template <template<uintptr_t> class AddressPolicy>\\n`;\r\n            result += `    ${getClasslName(child)}<AddressPolicy> ${getFactoryName(child)}(uintptr_t n) const;\\n`;\r\n            result += `\\n`;\r\n            result += `    template <>\\n`;\r\n            result += `    ${getClasslName(child)}<Fixed> ${getFactoryName(child)}() const\\n`;\r\n            result += `    {\\n`;\r\n            result += `        return ${getClasslName(child)}<Fixed>(this->GetAddress() - g_Address);\\n`\r\n            result += `    }\\n`;\r\n            result += `\\n`;\r\n            result += `    template <>\\n`;\r\n            result += `    ${getClasslName(child)}<At> ${getFactoryName(child)}(uintptr_t address) const\\n`;\r\n            result += `    {\\n`;\r\n            result += `        return ${getClasslName(child)}<At>(address);\\n`\r\n            result += `    }\\n`;\r\n            result += `\\n`;\r\n            result += `    template <>\\n`;\r\n            result += `    ${getClasslName(child)}<Offset> ${getFactoryName(child)}(uintptr_t offset) const\\n`;\r\n            result += `    {\\n`;\r\n            result += `        return ${getClasslName(child)}<Offset>(this->GetAddress() - g_Address + offset);\\n`\r\n            result += `    }\\n`;\r\n        });\r\n        \r\n        result += `};\\n`;\r\n    });\r\n\r\n    forEachRegister(data, '/', (node, address) => {\r\n        const level = getLevel(node.parent);\r\n        const className = getClasslName(node.parent + node.name);\r\n        const enclosingName = rootClassName + (getEnclosingName(node.parent) ? '::' + getEnclosingName(node.parent) : '');\r\n        const baseClassName = `AddressPolicy${level}<0x${address.toString(16)}>`;\r\n\r\n        result += `\\n`;\r\n        result += `/*\\n`;\r\n        result += ` * ${node.parent + node.name}\\n`;\r\n        result += ` *   - Base:    0x${(address - parseInt(node.offset, 16)).toString(16)}\\n`\r\n        result += ` *   - Offset:  0x${node.offset}\\n`;\r\n        result += ` *   - Address: 0x${address.toString(16)}\\n`;\r\n        result += ` */\\n`;\r\n\r\n        for (let i = 1; i <= level; i++) {\r\n            result += `template <template<uintptr_t> class AddressPolicy${i}>\\n`;\r\n        }\r\n        result += `class ${enclosingName}::${className} : public ${baseClassName} {\\n`;\r\n        result += `public:\\n`;\r\n        result += `    typedef ${enclosingName} ParentType;\\n`;\r\n        result += `    typedef ${baseClassName} BaseType;\\n`;\r\n        result += `\\n`;\r\n        result += `    static const uintptr_t g_Offset = 0x${node.offset};\\n`;\r\n        result += `    static const uintptr_t g_Address = ParentType::g_Address + g_Offset;\\n`;\r\n        result += `    static const size_t    g_Size = ${node.size};\\n`;\r\n        result += `\\n`;\r\n        result += `    typedef typename BaseTypeOfBytes<g_Size>::value ValueType;\\n`;\r\n        result += `\\n`;\r\n        result += `    class Data;\\n`;\r\n        result += `\\n`;\r\n        result += `public:\\n`;\r\n        result += `    explicit ${className}(uintptr_t n)\\n`;\r\n        result += `        : BaseType(n)\\n`;\r\n        result += `    {\\n`;\r\n        result += `    }\\n`;\r\n        result += `\\n`;\r\n        result += `    Data Get() const\\n`;\r\n        result += `    {\\n`;\r\n        result += `        return Data(\\n`;\r\n        result += `            *reinterpret_cast<volatile ValueType*>(this->GetAddress())\\n`;\r\n        result += `        );\\n`;\r\n        result += `    }\\n`;\r\n        result += `\\n`;\r\n        result += `    void Set(ValueType value)\\n`;\r\n        result += `    {\\n`;\r\n        result += `        *reinterpret_cast<volatile ValueType*>(this->GetAddress()) = value;\\n`;\r\n        result += `    }\\n`;\r\n        result += `};\\n`;\r\n\r\n        result += `\\n`;\r\n        for (let i = 1; i <= level; i++) {\r\n            result += `template <template<uintptr_t> class AddressPolicy${i}>\\n`;\r\n        }\r\n        result += `class ${enclosingName}::${className}<AddressPolicy${level}>::Data : public DataBase<ValueType> {\\n`;\r\n        result += `private:\\n`;\r\n        result += `    ValueType m_Value;\\n`\r\n        result += `\\n`;\r\n        node.fields.forEach((field) => {\r\n            result += `    typedef Field<${field.bits[0]}, ${field.bits[1]}> M${siglofyName(field.name)};\\n`;\r\n        });\r\n        result += `\\n`;\r\n        result += `public:\\n`;\r\n        result += `    explicit Data(ValueType value)\\n`;\r\n        result += `        : m_Value(value)\\n`;\r\n        result += `    {\\n`;\r\n        result += `    }\\n`;\r\n        result += `\\n`;\r\n        result += `    NN_IMPLICIT operator ValueType() const\\n`;\r\n        result += `    {\\n`;\r\n        result += `        return m_Value;\\n`;\r\n        result += `    }\\n`;\r\n        node.fields.forEach((field) => {\r\n            const fieldName = siglofyName(field.name);\r\n            result += `\\n`;\r\n            result += `    template <typename T = void>\\n`;\r\n            result += `    int ${fieldName}() const\\n`;\r\n            result += `    {\\n`;\r\n            result += `        return this->template Get<M${fieldName}>(m_Value);\\n`\r\n            result += `    }\\n`;\r\n            result += `\\n`;\r\n            result += `    template <typename T = void>\\n`;\r\n            result += `    Data& ${fieldName}(int value)\\n`;\r\n            result += `    {\\n`;\r\n            result += `        this->template Set<M${fieldName}>(m_Value, value);\\n`\r\n            result += `        return *this;\\n`;\r\n            result += `    }\\n`;\r\n        });\r\n        result += `};\\n`;\r\n    });\r\n\r\n    data['/'].children.forEach((child) => {\r\n        result += `\\n`;\r\n        result += `template <>\\n`;\r\n        result += `${rootClassName}::${getClasslName(child)}<Fixed> ${rootClassName}::${getFactoryName(child)}()\\n`;\r\n        result += `{\\n`;\r\n        result += `    return ${getClasslName(child)}<Fixed>(0);\\n`\r\n        result += `}\\n`;\r\n        result += `\\n`;\r\n        result += `template <>\\n`;\r\n        result += `${rootClassName}::${getClasslName(child)}<At> ${rootClassName}::${getFactoryName(child)}(uintptr_t address)\\n`;\r\n        result += `{\\n`;\r\n        result += `    return ${getClasslName(child)}<At>(address);\\n`\r\n        result += `}\\n`;\r\n        result += `\\n`;\r\n        result += `template <>\\n`;\r\n        result += `${rootClassName}::${getClasslName(child)}<Offset> ${rootClassName}::${getFactoryName(child)}(uintptr_t offset)\\n`;\r\n        result += `{\\n`;\r\n        result += `    return ${getClasslName(child)}<Offset>(offset);\\n`\r\n        result += `}\\n`;\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n// This generates the scheme described on confluence.\r\nlet convertToCpp = (data) => {\r\n    let result = '';\r\n    \r\n    // BOM\r\n    // result += '\\357\\273\\277';\r\n\r\n    // Copyright\r\n    result += \"/*--------------------------------------------------------------------------------*\\n\";\r\n    result += \"  Copyright (C)Nintendo All rights reserved.\\n\";\r\n    result += \"\\n\";\r\n    result += \"  These coded instructions, statements, and computer programs contain proprietary\\n\";\r\n    result += \"  information of Nintendo and/or its licensed developers and are protected by\\n\";\r\n    result += \"  national and international copyright laws. They may not be disclosed to third\\n\";\r\n    result += \"  parties or copied or duplicated in any form, in whole or in part, without the\\n\";\r\n    result += \"  prior written consent of Nintendo.\\n\";\r\n    result += \"\\n\";\r\n    result += \"  The content herein is highly confidential and should be handled accordingly.\\n\";\r\n    result += \" *--------------------------------------------------------------------------------*/\\n\";\r\n\r\n    result += \"\\n\";\r\n    result += \"/**\\n\";\r\n    result += \" * @file\\n\";\r\n    result += \" * @brief Automatically generated Register Accessors\\n\";\r\n    result += \" */\\n\";\r\n\r\n    // Nolint\r\n    result += \"\\n\";\r\n    result += \"// NOLINT(build/header_guard)\\n\";\r\n\r\n    let getFactoryName = (path) => {\r\n        return siglofyName(splitKey(path)[1]);\r\n\r\n    };\r\n\r\n    let getClasslName = (path) => {\r\n        const segs = path.split('/').filter(s => s !== '');\r\n        if (segs.length === 0) {\r\n            return 'Register';\r\n        } else {\r\n            return classifyName(segs[segs.length - 1]);\r\n        }\r\n    };\r\n\r\n    let getClasslNameLong = (path) => {\r\n        return ['Register'].concat(path.split('/').filter(s => s !== '').map((s) => classifyName(s))).join('::');\r\n    };\r\n\r\n    let hasSymbolicValue = (field) => (field.value && field.value.length > 0);\r\n\r\n    result += `\\n`;\r\n    result += `/**\\n`;\r\n    result += ` * @class At\\n`;\r\n    result += ` * @brief Address Policy Tag to apply an absolute runtime address\\n`;\r\n    result += ` *\\n`;\r\n    result += ` * @details\\n`;\r\n    result += ` *   This is an incomplete type intended to be used as dispatch tag for template\\n`;\r\n    result += ` *   methods. With this tag, the factory method to create a new instance of\\n`;\r\n    result += ` *   group or register will interpreate its sole argument as the absolute\\n`;\r\n    result += ` *   runtime address of such group or register.\\n`;\r\n    result += ` */\\n`;\r\n    result += `class At;\\n`;\r\n    \r\n    result += `\\n`;\r\n    result += `/**\\n`;\r\n    result += ` * @class Offset\\n`;\r\n    result += ` * @brief Address Policy Tag to apply an extra address offset\\n`;\r\n    result += ` *\\n`;\r\n    result += ` * @details\\n`;\r\n    result += ` *   This is an incomplete type intended to be used as dispatch tag for template\\n`;\r\n    result += ` *   methods. With this tag, the factory method to create a new instance of\\n`;\r\n    result += ` *   group or register will interpreate its sole argument as an address offset.\\n`;\r\n    result += ` *   The runtime address of such group or register is calculated by adding\\n`\r\n    result += ` *   together:\\n`;\r\n    result += ` *   -# runtime address of its parent\\n`;\r\n    result += ` *   -# declare offset of itself\\n`;\r\n    result += ` *   -# this extra offset\\n`;\r\n    result += ` */\\n`;\r\n    result += `class Offset;\\n`;\r\n    const rootClassName = 'Register';\r\n\r\n    //////////////////////////////////////////////////////////\r\n    // Declarations\r\n    //////////////////////////////////////////////////////////\r\n    \r\n    result += `\\n`;\r\n    result += `/**\\n`;\r\n    result += ` * @brief Top level class for the register accessors\\n`;\r\n    result += ` *\\n`;\r\n    result += ` * @details\\n`;\r\n    result += ` *   This class represents the top level container of all groups and registers.\\n`;\r\n    result += ` *   All of its data members and methods are static\\n`;\r\n    result += ` */\\n`;\r\n    result += `class ${rootClassName} {\\n`;\r\n    result += `public:\\n`;\r\n    result += `    /**\\n`;\r\n    result += `     * @brief Declare Address\\n`;\r\n    result += `     */\\n`;\r\n    result += `    static const uintptr_t g_DeclareAddress = 0;\\n`;\r\n    result += `    /**\\n`;\r\n    result += `     * @brief Runtime Address\\n`;\r\n    result += `     */\\n`;\r\n    result += `    static const uintptr_t g_RuntimeAddress = 0;\\n`;\r\n    result += `\\n`;\r\n    data['/'].children.forEach((path) => {\r\n        result += `    class ${getClasslName(path)};\\n`;\r\n    });\r\n    result += `\\n`;\r\n    result += `private:\\n`;\r\n    result += `    template <size_t N>\\n`;\r\n    result += `    struct  BaseTypeOfBytes_;\\n`;\r\n    result += `\\n`;\r\n    result += `    template <>\\n`;\r\n    result += `    struct BaseTypeOfBytes_<1> {\\n`;\r\n    result += `        typedef uint8_t value;\\n`;\r\n    result += `    };\\n`;\r\n    result += `\\n`;\r\n    result += `    template <>\\n`;\r\n    result += `    struct BaseTypeOfBytes_<2> {\\n`;\r\n    result += `        typedef uint16_t value;\\n`;\r\n    result += `    };\\n`;\r\n    result += `\\n`;\r\n    result += `    template <>\\n`;\r\n    result += `    struct BaseTypeOfBytes_<4> {\\n`;\r\n    result += `        typedef uint32_t value;\\n`;\r\n    result += `    };\\n`;\r\n    result += `\\n`;\r\n    result += `    template <>\\n`;\r\n    result += `    struct BaseTypeOfBytes_<8> {\\n`;\r\n    result += `        typedef uint64_t value;\\n`;\r\n    result += `    };\\n`;\r\n    result += `\\n`;\r\n    result += `    static constexpr size_t CeilP2Helper_(size_t n, size_t shift) {\\n`;\r\n    result += `        return (n & (n - 1)) ? CeilP2Helper_(n & (n - 1), 1) : (n << shift);\\n`;\r\n    result += `    }\\n`;\r\n    result += `\\n`;\r\n    result += `    static constexpr size_t CeilP2_(size_t n) {\\n`;\r\n    result += `        return n ? CeilP2Helper_(n, 0) : 0;\\n`;\r\n    result += `    }\\n`;\r\n    result += `\\n`;\r\n    result += `    template <size_t N>\\n`;\r\n    result += `    struct BaseTypeOfBits_ {\\n`;\r\n    result += `        typedef typename BaseTypeOfBytes_<CeilP2_((N + 7) / 8)>::value value;\\n`;\r\n    result += `    };\\n`;\r\n    result += `\\n`;\r\n    result += `    template <uint8_t L, uint8_t H, typename T>\\n`\r\n\tresult += `    struct Field_ {\\n`\r\n    result += `        static const uint8_t low   = L;\\n`;\r\n    result += `        static const uint8_t high  = H;\\n`;\r\n    result += `\\n`;\r\n    result += `        NN_STATIC_ASSERT(low <= high);\\n`;\r\n    result += `        NN_STATIC_ASSERT(std::is_integral<T>::value);\\n`;\r\n    result += `        NN_STATIC_ASSERT(high < sizeof(T) * 8);\\n`;\r\n    result += `\\n`;\r\n    result += `        static const uint8_t shift = low;\\n`;\r\n    result += `        static const uint8_t size  = high - low + 1;\\n`;\r\n    result += `\\n`;\r\n    result += `        static const T mask = (size == sizeof(T) * 8) ? (~T{0}) : (((T{1} << size) - 1) << shift);\\n`;\r\n    result += `\\n`;\r\n    result += `        typedef typename BaseTypeOfBits_<size>::value ValueType;\\n`\r\n    result += `    };\\n`\r\n\r\n    result += `\\n`;\r\n    result += `public:\\n`;\r\n    data['/'].children.forEach((path) => {\r\n        result += `\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Factory method to create an instance of ${path}\\n`;\r\n        result += `     * @details\\n`;\r\n        result += `     *   The runtime address of the new instance is calculated by adding together:\\n`;\r\n        result += `     *   -# runtime address of its parent\\n`;\r\n        result += `     *   -# declare offset of itself\\n`;\r\n        result += `     */\\n`;\r\n        result += `    static inline ${getClasslName(path)} ${getFactoryName(path)}() NN_NOEXCEPT;\\n`;\r\n        result += `\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Factory method to create an instance of ${path}\\n`;\r\n        result += `     * @details\\n`;\r\n        result += `     *   The runtime address of the new instance is determined by the template\\n`;\r\n        result += `     *   parameter, which can only be one of:\\n`;\r\n        result += `     *   - At\\n`;\r\n        result += `     *   - Offset\\n`;\r\n        result += `     */\\n`;\r\n        result += `    template <typename AddressPolicy>\\n`;\r\n        result += `    static inline ${getClasslName(path)} ${getFactoryName(path)}(uintptr_t) NN_NOEXCEPT;\\n`;\r\n        \r\n    });\r\n    result += `};\\n`;\r\n\r\n    forEachGroup(data, '/', (node, address, children) => {\r\n        if (!node.parent) {\r\n            return;\r\n        }\r\n\r\n        const className     = getClasslName(node.parent + node.name);\r\n        const enclosingName = getClasslNameLong(node.parent);\r\n        const offset = node.offset.match(/^0x/i) ? node.offset : `0x${node.offset}`;\r\n\r\n        result += `\\n`;\r\n        result += `/**\\n`;\r\n        result += ` * @brief Class for group ${node.parent  + node.name}\\n`;\r\n        result += ` *\\n`;\r\n        result += ` * @details\\n`;\r\n        result += ` *   This class represents the group ${node.parent  + node.name}.\\n`;\r\n        result += ` *   The declared address information are:\\n`;\r\n        result += ` *   - %Base:    0x${(address - parseInt(offset)).toString(16)}\\n`\r\n        result += ` *   - %Offset:  ${offset}\\n`;\r\n        result += ` *   - %Address: 0x${address.toString(16)}\\n`;\r\n        result += ` */\\n`;\r\n        result += `class ${enclosingName}::${className} {\\n`;\r\n        result += `public:\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Declared Base Address\\n`;\r\n        result += `     */\\n`;\r\n        result += `    static const uintptr_t g_DeclareBase    = ${enclosingName}::g_DeclareAddress;\\n`;\r\n        result += `\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Declared Address Offset\\n`;\r\n        result += `     */\\n`;\r\n        result += `    static const uintptr_t g_DeclareOffset  = ${offset};\\n`;\r\n        result += `\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Declared Address\\n`;\r\n        result += `     */\\n`;\r\n        result += `    static const uintptr_t g_DeclareAddress = g_DeclareBase + g_DeclareOffset;\\n`;\r\n        result += `\\n`;\r\n        children.forEach((path) => {\r\n            result += `    class ${getClasslName(path)};\\n`;\r\n        });\r\n        result += `\\n`;\r\n        result += `private:\\n`;\r\n        result += `    uintptr_t m_RuntimeAddress{g_DeclareAddress};\\n`;\r\n        result += `\\n`;\r\n        result += `public:\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Constructor\\n`;\r\n        result += `     * @param[in] addr The runtime address\\n`;\r\n        result += `     */\\n`;\r\n        result += `    explicit ${className}(uintptr_t addr) NN_NOEXCEPT\\n`;\r\n        result += `        : m_RuntimeAddress(addr)\\n`;\r\n        result += `    {\\n`;\r\n        result += `    }\\n`;\r\n        result += `\\n`;\r\n        result += `    ${className}() NN_NOEXCEPT = default;\\n`;\r\n        \r\n        children.forEach((path) => {\r\n            result += `\\n`;\r\n            result += `    /**\\n`;\r\n            result += `     * @brief Factory method to create an instance of ${path}\\n`;\r\n            result += `     * @details\\n`;\r\n            result += `     *   The runtime address of the new instance is calculated by adding together:\\n`;\r\n            result += `     *   -# runtime address of its parent\\n`;\r\n            result += `     *   -# declare offset of itself\\n`;\r\n            result += `     */\\n`;\r\n            result += `    inline ${getClasslName(path)} ${getFactoryName(path)}() const NN_NOEXCEPT;\\n`;\r\n            result += `\\n`;\r\n            result += `    /**\\n`;\r\n            result += `     * @brief Factory method to create an instance of ${path}\\n`;\r\n            result += `     * @details\\n`;\r\n            result += `     *   The runtime address of the new instance is determined by the template\\n`;\r\n            result += `     *   parameter, which can only be one of:\\n`;\r\n            result += `     *   - At\\n`;\r\n            result += `     *   - Offset\\n`;\r\n            result += `     */\\n`;\r\n            result += `    template <typename AddressPolicy>\\n`;\r\n            result += `    inline ${getClasslName(path)} ${getFactoryName(path)}(uintptr_t n) const NN_NOEXCEPT;\\n`;\r\n        });\r\n        \r\n        result += `};\\n`;\r\n    });\r\n\r\n    forEachRegister(data, '/', (node, address) => {\r\n        const className     = getClasslName(node.parent + node.name);\r\n        const enclosingName = getClasslNameLong(node.parent);\r\n        const offset = node.offset.match(/^0x/i) ? node.offset : `0x${node.offset}`;\r\n\r\n        result += `\\n`;\r\n        result += `/**\\n`;\r\n        result += ` * @brief Class for register ${node.parent  + node.name}\\n`;\r\n        result += ` *\\n`;\r\n        result += ` * @details\\n`;\r\n        result += ` *   This class represents the ${node.desc_short}, i.e. ${node.parent  + node.name}.\\n`;\r\n        result += ` *\\n`;\r\n        result += ` *   The declared address information are:\\n`;\r\n        result += ` *   - %Base:    0x${(address - parseInt(offset)).toString(16)}\\n`\r\n        result += ` *   - %Offset:  ${offset}\\n`;\r\n        result += ` *   - %Address: 0x${address.toString(16)}\\n`;\r\n        result += ` */\\n`;\r\n        result += `class ${enclosingName}::${className} {\\n`;\r\n        result += `public:\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Declared Base Address\\n`;\r\n        result += `     */\\n`;\r\n        result += `    static const uintptr_t g_DeclareBase    = ${enclosingName}::g_DeclareAddress;\\n`;\r\n        result += `\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Declared Address Offset\\n`;\r\n        result += `     */\\n`;\r\n        result += `    static const uintptr_t g_DeclareOffset  = ${offset};\\n`;\r\n        result += `\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Declared Address\\n`;\r\n        result += `     */\\n`;\r\n        result += `    static const uintptr_t g_DeclareAddress = g_DeclareBase + g_DeclareOffset;\\n`;\r\n        result += `\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Size of this register in bytes\\n`;\r\n        result += `     */\\n`;\r\n        result += `    static const size_t    g_Size           = ${node.size};\\n`;\r\n        result += `\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Smallest integer type that can hold the value of this register\\n`;\r\n        result += `     */\\n`;\r\n        result += `    typedef typename BaseTypeOfBytes_<g_Size>::value ValueType_;\\n`;\r\n        result += `\\n`;\r\n        result += `private:\\n`;\r\n        result += `    uintptr_t m_RuntimeAddress{g_DeclareAddress};\\n`;\r\n        result += `    class     Data_;\\n`;\r\n        result += `\\n`;\r\n        node.fields.forEach((field) => {\r\n            result += `    typedef Field_<${field.bits[0]}, ${field.bits[1]}, ValueType_> ${classifyName(field.name)}_;\\n`;\r\n        });\r\n        result += `\\n`;\r\n        result += `public:\\n`;\r\n        node.fields.forEach((field) => {\r\n            if (hasSymbolicValue(field)) {\r\n                result += `    /**\\n`;\r\n                result += `     * @brief Symbolic values for the field ${field.name}\\n`;\r\n                result += `     */\\n`;\r\n                result += `    enum class ${siglofyName(field.name)}Value : ${classifyName(field.name)}_::ValueType {\\n`;\r\n                field.value.forEach(symbolic => {\r\n                    result += `        ${siglofyName(symbolic.name)} = ${symbolic.value}, //!< ${symbolic.name}\\n`;\r\n                });\r\n                result += `    };\\n`;\r\n            }\r\n        });\r\n        result += `\\n`;\r\n        result += `public:\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Constructor\\n`;\r\n        result += `     * @param[in] addr The runtime address\\n`;\r\n        result += `     */\\n`;\r\n        result += `    explicit ${className}(uintptr_t addr) NN_NOEXCEPT\\n`;\r\n        result += `        : m_RuntimeAddress(addr)\\n`;\r\n        result += `    {\\n`;\r\n        result += `    }\\n`;\r\n        result += `\\n`;\r\n        result += `    ${className}() NN_NOEXCEPT = default;\\n`;\r\n        result += `\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Read register value to memory\\n`;\r\n        result += `     */\\n`;\r\n        result += `    inline Data_ Get() const NN_NOEXCEPT;\\n`;\r\n        result += `\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Write a value from memory to register\\n`;\r\n        result += `     * @param[in] value The value to be written\\n`;\r\n        result += `     */\\n`;\r\n        result += `    inline void  Set(ValueType_ value) NN_NOEXCEPT;\\n`;\r\n        result += `};\\n`;\r\n\r\n        result += `\\n`;\r\n        result += `/**\\n`;\r\n        result += ` * @brief In memory value type for register ${node.parent  + node.name}\\n`;\r\n        result += ` * @details\\n`;\r\n        result += ` *   This class is the in memory reprensentation of the register value.\\n`;\r\n        result += ` *   It provides accessors to read / write the fields of the register. Those\\n`;\r\n        result += ` *   accessors affect only the in memory copy of the register value.\\n`;\r\n        result += ` *   value.\\n`;\r\n        result += ` */\\n`;\r\n        result += `class ${enclosingName}::${className}::Data_ {\\n`;\r\n        result += `private:\\n`;\r\n        result += `    ValueType_ m_Value;\\n`\r\n        result += `\\n`;\r\n        result += `public:\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Constructor\\n`;\r\n        result += `     * @param[in] value The register reading\\n`;\r\n        result += `     */\\n`;\r\n        result += `    explicit Data_(ValueType_ value) NN_NOEXCEPT\\n`;\r\n        result += `        : m_Value(value)\\n`;\r\n        result += `    {\\n`;\r\n        result += `    }\\n`;\r\n        result += `\\n`;\r\n        result += `    /**\\n`;\r\n        result += `     * @brief Implicitly convert back to ValueType_\\n`;\r\n        result += `     */\\n`;\r\n        result += `    NN_IMPLICIT operator ValueType_() const NN_NOEXCEPT\\n`;\r\n        result += `    {\\n`;\r\n        result += `        return m_Value;\\n`;\r\n        result += `    }\\n`;\r\n        node.fields.forEach((field) => {\r\n            const fieldName = siglofyName(field.name);\r\n            const valueType = hasSymbolicValue(field) ? `${siglofyName(field.name)}Value` : `${classifyName(field.name)}_::ValueType`;\r\n            result += `\\n`;\r\n            result += `    /**\\n`;\r\n            result += `     * @brief Read the ${field.name} field\\n`;\r\n            result += `     */\\n`;\r\n            result += `    inline ${valueType} ${fieldName}() const NN_NOEXCEPT;\\n`;\r\n            result += `\\n`;\r\n            result += `    /**\\n`;\r\n            result += `     * @brief Write the ${field.name} field\\n`;\r\n            result += `     */\\n`;\r\n            result += `    inline Data_& ${fieldName}(${valueType} value) NN_NOEXCEPT;\\n`\r\n        });\r\n        result += `};\\n`;\r\n    });\r\n\r\n    //////////////////////////////////////////////////////////\r\n    // Implementation\r\n    //////////////////////////////////////////////////////////\r\n\r\n    forEachGroup(data, '/', (node, address, children) => {\r\n        const runtimeAddress = node.parent ? 'm_RuntimeAddress' : 'g_RuntimeAddress';\r\n        const constNess      = node.parent ? 'const' : '';\r\n        const enclosingName  = getClasslNameLong((node.parent || '') + node.name);\r\n\r\n        children.forEach((path) => {\r\n            const className     = getClasslName(path);\r\n            const classNameLong = getClasslNameLong(path);\r\n            const factoryName   = getFactoryName(path);\r\n\r\n            result += `\\n`;\r\n            result += `/*\\n`;\r\n            result += ` * ${path}: Factory methods\\n`;\r\n            result += ` */\\n`;\r\n            result += `\\n`;\r\n            result += `inline ${classNameLong}\\n`\r\n            result += `${enclosingName}::${factoryName}() ${constNess} NN_NOEXCEPT\\n`;\r\n            result += `{\\n`;\r\n            result += `    return ${className}(${runtimeAddress} + ${className}::g_DeclareOffset);\\n`\r\n            result += `}\\n`;\r\n            result += `\\n`;\r\n            result += `template <>\\n`;\r\n            result += `inline ${classNameLong}\\n`\r\n            result += `${enclosingName}::${factoryName}<At>(uintptr_t address) ${constNess} NN_NOEXCEPT\\n`;\r\n            result += `{\\n`;\r\n            result += `    return ${className}(address);\\n`\r\n            result += `}\\n`;\r\n            result += `\\n`;\r\n            result += `template <>\\n`;\r\n            result += `inline ${classNameLong}\\n`\r\n            result += `${enclosingName}::${factoryName}<Offset>(uintptr_t offset) ${constNess} NN_NOEXCEPT\\n`;\r\n            result += `{\\n`;\r\n            result += `    return ${className}(${runtimeAddress} + ${className}::g_DeclareOffset + offset);\\n`\r\n            result += `}\\n`;\r\n        });\r\n    });\r\n\r\n    forEachRegister(data, '/', (node, address) => {\r\n        const enclosingName  = getClasslNameLong(node.parent + node.name);\r\n        \r\n        result += `/*\\n`;\r\n        result += ` * ${node.parent + node.name}: Getter\\n`;\r\n        result += ` */\\n`;\r\n        result += `inline ${enclosingName}::Data_\\n`;\r\n        result += `${enclosingName}::Get() const NN_NOEXCEPT\\n`;\r\n        result += `{\\n`;\r\n        result += `    return Data_(*(volatile ValueType_*)m_RuntimeAddress);\\n`\r\n        result += `}\\n`;\r\n        \r\n        result += `\\n`;\r\n        result += `/*\\n`;\r\n        result += ` * ${node.parent + node.name}: Setter\\n`;\r\n        result += ` */\\n`;\r\n        result += `inline void\\n`;\r\n        result += `${enclosingName}::Set(ValueType_ value) NN_NOEXCEPT\\n`;\r\n        result += `{\\n`;\r\n        result += `    *(volatile ValueType_*)m_RuntimeAddress = value;\\n`\r\n        result += `}\\n`;\r\n\r\n        node.fields.forEach((field) => {\r\n            const methodName = siglofyName(field.name);\r\n            const className  = `${classifyName(field.name)}_`;\r\n            const valueType = hasSymbolicValue(field) ? `${siglofyName(field.name)}Value` : `${className}::ValueType`;\r\n\r\n            result += `\\n`;\r\n            result += `/*\\n`;\r\n            result += ` * ${node.parent + node.name}: Field accessor\\n`;\r\n            result += ` *   [${field.bits[0]}, ${field.bits[1]}]: ${field.name} - ${field.meaning}\\n`;\r\n            result += ` */\\n`;\r\n            result += `\\n`;\r\n            result += `inline ${enclosingName}::${valueType}\\n`;\r\n            result += `${enclosingName}::Data_::${methodName}() const NN_NOEXCEPT\\n`;\r\n            result += `{\\n`;\r\n            result += `    ${className}::ValueType rv = (m_Value & ${className}::mask) >> ${className}::shift;\\n`;\r\n            result += `    return ` + (hasSymbolicValue(field) ? `static_cast<${valueType}>(rv)`: `rv`) + `;\\n`;\r\n            result += `}\\n`;\r\n            result += `\\n`;\r\n            result += `inline ${enclosingName}::Data_&\\n`;\r\n            result += `${enclosingName}::Data_::${methodName}(${valueType} value) NN_NOEXCEPT\\n`;\r\n            result += `{\\n`;\r\n            result += `    m_Value &= ~${className}::mask;\\n`;\r\n            result += `    m_Value |= (static_cast<ValueType_>(value) << ${className}::shift) & ${className}::mask;\\n`\r\n            result += `    return *this;\\n`;\r\n            result += `}\\n`;\r\n        });\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport let convertTo = (data, format) => {\r\n    const converter = {\r\n        json: {\r\n            handle: convertToJson,\r\n            descripton: 'JSON'\r\n        } ,\r\n        macro: {\r\n            handle: convertToMacro,\r\n            descripton: 'C/C++ Macro'\r\n        },\r\n        template: {\r\n            handle: convertToTemplate,\r\n            descripton: 'C++ Template'\r\n        },\r\n        'C++': {\r\n            handle: convertToCpp,\r\n            description: 'C++'\r\n        }\r\n    }[format];\r\n\r\n    return ({\r\n        data: converter.handle(data),\r\n        descripton: converter.descripton\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { regDb } from '../RegDb';\r\nimport { convertTo } from './Converter';\r\nimport { splitKey } from './Utils';\r\n\r\nimport './Form.css';\r\n\r\nexport class Warning extends Component {\r\n\trender() {\r\n\t\treturn this.props.children ? (\r\n\t\t\t<div className=\"warning\">\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</div>\r\n\t\t) : null;\r\n \t}\r\n}\r\n\r\nexport class Keyword extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<span className=\"keyword-label\">{this.props.children}</span>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport class NameInput extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<input type=\"text\" {...this.props}/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport class Exporter extends Component {\r\n\tsaveAs = (content, filename) => {\r\n\t    var dataStr = \"data:text/plain;charset=utf-8,\" + encodeURIComponent(content);\r\n\t    var downloadAnchorNode = document.createElement('a');\r\n\t    downloadAnchorNode.setAttribute(\"href\",     dataStr);\r\n\t\tdownloadAnchorNode.setAttribute(\"download\", filename);\r\n\t    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n\t    downloadAnchorNode.click();\r\n\t\tdownloadAnchorNode.remove();\r\n\t}\r\n\r\n\texportAs = (format) => {\r\n\t\tconst path = this.props.path;\r\n\r\n\t\tlet name = splitKey(path)[1];\r\n\t\tif (name === '/') {\r\n\t\t\tname = 'register';\r\n\t\t}\r\n\t\tif (name.endsWith('/')) {\r\n\t\t\tname = name.slice(0, -1);\r\n\t\t}\r\n\t\tname += format === 'json' ? '.json' : '.h';\r\n\r\n\t\tregDb.getHierarchy(path).then((data) => this.saveAs(convertTo(data, format).data, name));\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<span onClick={() => this.exportAs(this.props.format)}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport class Deleter extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdeleted: false\r\n\t\t};\r\n\t}\r\n\t\r\n\tdeleteHierarchy = () => {\r\n\t\tif (window.confirm(`This will recursively delete everything under ${this.props.path} (inclusive). This cannot be undone. You sure?`)) {\r\n\t\t\tregDb.delete(this.props.path).then(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tdeleted: true\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.state.deleted) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdeleted: false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst [parentKey] = splitKey(this.props.path);\r\n\r\n\t\treturn this.state.deleted ? (\r\n\t\t\t<Redirect to={parentKey ? '/view' + parentKey : '/'} />\r\n\t\t) : (\r\n\t\t\t<span onClick={this.deleteHierarchy}>\r\n\t\t\t\t {this.props.children}\r\n\t\t\t</span>\r\n\t\t)\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { regDb } from '../RegDb';\r\nimport { Warning, Keyword } from './Form';\r\n\r\nexport function str2hex(s) {\r\n\treturn parseInt(s, 16);\r\n}\r\n\r\nexport function num2hexstr(n) {\r\n\treturn \"0x\" + (\"00000000\" + n.toString(16)).toUpperCase().substr(-8);\r\n}\r\n\r\nexport function parseIntStr(s) {\r\n\tif (s.match(/^\\s*\\d+\\s*$/) ||\r\n\t\ts.match(/^\\s*0[0-7]+\\s*$/) ||\r\n\t\ts.match(/^\\s*0x[0-9a-f]+\\s*$/i)) {\r\n\t\treturn parseInt(s);\r\n\t}\r\n\telse {\r\n\t\treturn NaN;\r\n\t}\r\n}\r\n\r\nexport function getCoordinate(offset, width) {\r\n\tconst row = Math.floor(offset / width) + 1;\r\n\tconst col = width - offset % width;\r\n\r\n\treturn [row, col];\r\n}\r\n\r\nexport function isInRange(n, range) {\r\n\treturn (range[0] <= n && n <= range[1]) || (range[1] <= n && n <= range[0]);\r\n}\r\n\r\nexport function splitKey(key) {\r\n\tif (!key) {\r\n\t\treturn [undefined, undefined];\r\n\t}\r\n\t\r\n\tif (key === '/') {\r\n\t\treturn [undefined, '/'];\r\n\t}\r\n\r\n\treturn key.match(/^(.*\\/)(.+)$/).slice(1, 3);\r\n}\r\n\r\nexport function parsePath(path) {\r\n\tconst m = path.match(/^(\\/new\\/group|\\/new\\/register|\\/view|\\/edit)(\\/.*)*/);\r\n\tif (!m) {\r\n\t\tthrow Error(`Unrecognized path: ${path}`);\r\n\t}\r\n\tconst [op, key] = m.slice(1,3);\r\n\treturn [op, key || '/'];\r\n}\r\n\r\nexport function withReload(WrappedComponent) {\r\n\treturn class extends Component {\r\n\t\tconstructor(props) {\r\n\t\t\tsuper(props);\r\n\r\n\t\t\tthis.state = {\r\n\t\t\t\top: undefined,\r\n\t\t\t\tpath: undefined,\r\n\t\t\t\tdata: undefined,\r\n\t\t\t\terror: undefined\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tload = async () => {\r\n\t\t\tconst [op, path] = parsePath(this.props.location.pathname);\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await this.loadContent(op, path);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\top: op,\r\n\t\t\t\t\tpath: path,\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t\terror: undefined\r\n\t\t\t\t});\r\n\t\t\t} catch(error) {\r\n\t\t\t\tconst n = await regDb.count();\r\n\r\n\t\t\t\tif (n === 0) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\top: op,\r\n\t\t\t\t\t\tpath: path,\r\n\t\t\t\t\t\tdata: undefined,\r\n\t\t\t\t\t\terror: 'db-empty'\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\top: op,\r\n\t\t\t\t\t\tpath: path,\r\n\t\t\t\t\t\tdata: undefined,\r\n\t\t\t\t\t\terror: 'load-failure'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tloadContent = async (op, path) => {\r\n\t\t\tswitch (op) {\r\n\t\t\tcase '/view':\r\n\t\t\t\tif (path.endsWith('/')) {\r\n\t\t\t\t\treturn regDb.getSubTree(path);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn regDb.get(path);\r\n\t\t\t\t}\r\n\t\t\tcase '/edit':\r\n\t\t\tcase '/new/group':\r\n\t\t\tcase '/new/register':\r\n\t\t\t\treturn regDb.get(path);\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tcomponentDidMount() {\r\n\t\t\tthis.load();\r\n\t\t}\r\n\r\n\t\tcomponentDidUpdate(prevProps) {\r\n\t\t\tif (this.props.location.pathname !== prevProps.location.pathname) {\r\n\t\t\t\tthis.load(); // re-load on route change\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trender() {\r\n\t\t\tif (this.state.error) { // error\r\n\t\t\t\tif (this.state.error === 'db-empty') {\r\n\t\t\t\t\treturn <Redirect to=\"/import\" />;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Warning>\r\n\t\t\t\t\t\t\tEntry <Keyword>{this.state.path}</Keyword> doesn't exist\r\n\t\t\t\t\t\t</Warning>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t} else if (this.state.data === undefined) { // loading\r\n\t\t\t\treturn null;\r\n\t\t\t}  else { // loaded\r\n\t\t\t\treturn <WrappedComponent op={this.state.op} path={this.state.path} data={this.state.data} {...this.props} />;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n","import React from 'react';\r\nimport { openDb } from 'idb';\r\nimport { splitKey } from './components/Utils';\r\n\r\nexport const RegContext = React.createContext();\r\n\r\nlet dbCache = undefined;\r\n\r\nclass RegDb {\r\n\tconstructor() {\r\n\t\tif (!window.indexedDB) {\r\n    \t\twindow.alert(\"Your browser doesn't support a stable version of IndexedDB.\");\r\n    \t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.dbPromise = openDb('NnRegView', 1, upgradeDb => {\r\n\t\t\tif (!upgradeDb.objectStoreNames.contains('store')) {\r\n\t\t    \tconst store = upgradeDb.createObjectStore('store');\r\n\t\t    \tstore.createIndex(\"parent\", \"parent\", {unique: false});\r\n    \t\t}\r\n\t\t});\r\n\t}\r\n\r\n\timport = async (str, transaction) => {\r\n\t\tlet tx = transaction;\r\n\t\tif (!tx) {\r\n\t\t\tconst db = await this.dbPromise;\r\n\t\t\ttx = db.transaction('store', 'readwrite');\r\n\t\t}\r\n\t\tconst store = tx.objectStore('store');\r\n\r\n\t\t// error if the entry is exist\r\n\t\tJSON.parse(str).forEach(\r\n\t\t\tentry => store.add(entry, (entry.parent || '') + entry.name)\r\n\t\t);\r\n\r\n\t\tthis.reload(tx);\r\n\r\n\t\treturn tx.complete;\r\n\t}\r\n\r\n\t// Count the number of entries in DB\r\n\tcount = async () => {\r\n\t\tconst db = await this.dbPromise;\r\n\t\tconst tx = db.transaction('store', 'readonly');\r\n\t\tconst store = tx.objectStore('store');\r\n\r\n\t\treturn store.count();\r\n\t}\r\n\r\n\t// Load, parse and cache DB content\r\n\tload = async (transaction) => {\r\n\t\tif (dbCache) {\r\n\t\t\treturn dbCache;\r\n\t\t}\r\n\t\t\r\n\t\tlet tx = transaction;\r\n\t\tif (!tx) {\r\n\t\t\tconst db = await this.dbPromise;\r\n\t\t\ttx = db.transaction('store', 'readwrite');\r\n\t\t}\r\n\t\tconst store = tx.objectStore('store');\r\n\t\t\r\n\t\tconst rawData = await store.getAll();\r\n\t\t\r\n\t\tdbCache = this.parse(rawData);\r\n\t\t\r\n\t\treturn dbCache;\r\n\t}\r\n\r\n\t// Force reload of the DB content\r\n\treload = async (transaction) => {\r\n\t\tdbCache = undefined;\r\n\t\treturn this.load(transaction);\r\n\t}\r\n\r\n\tgetChildren = async (key) => {\r\n\t\tconst db = await this.dbPromise;\r\n\t\tconst tx = db.transaction('store', 'readwrite');\r\n\t\tconst store = tx.objectStore('store');\r\n\t\tconst index = store.index('parent');\r\n\t\tconst val = await index.getAll(key);\r\n\t\t\r\n\t\tthis.setDbBusy(false);\r\n\t\t\r\n\t\tval.sort((a, b) => {\r\n\t\t\treturn parseInt(a.offset, 16) - parseInt(b.offset, 16);\r\n\t\t});\r\n\t\treturn val;\r\n\t}\r\n\t\r\n\tget = async (key, transaction) => {\r\n\t\tlet tx = transaction;\r\n\t\tif (!tx) {\r\n\t\t\tconst db = await this.dbPromise;\r\n\t\t\ttx = db.transaction('store', 'readwrite');\r\n\t\t}\r\n\r\n\t\tconst data = await this.load(tx);\r\n\t\tif (data.hasOwnProperty(key)) {\r\n\t\t\treturn data[key];\r\n\t\t} else {\r\n\t\t\tthrow Error(`Entry ${key} doesn't exist`);\r\n\t\t}\r\n\t}\r\n\r\n\tloadWithFilter = async (filter, transaction) => {\r\n\t\tlet tx = transaction;\r\n\t\tif (!tx) {\r\n\t\t\tconst db = await this.dbPromise;\r\n\t\t\ttx = db.transaction('store', 'readwrite');\r\n\t\t}\r\n\r\n\t\tconst data = await this.load(tx);\r\n\r\n\t\tlet result = [];\r\n\t\tfor (let elmKey in data) {\r\n\t\t\tif (data.hasOwnProperty(elmKey) && filter(data[elmKey])) {\r\n\t\t\t\tresult[elmKey] = {\r\n\t\t\t\t\tnode: data[elmKey].node,\r\n\t\t\t\t\taddress: data[elmKey].address,\r\n\t\t\t\t\tchildren: data[elmKey].children\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let elmKey in result) {\r\n\t\t\tresult[elmKey].children = result[elmKey].children.filter(\r\n\t\t\t\tchildKey => result.hasOwnProperty(childKey)\r\n\t\t\t).sort((keyA, keyB) => \r\n\t\t\t\tresult[keyA].address - result[keyB].address\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tgetSubTree = async (key, transaction) => {\r\n\t\tlet tx = transaction;\r\n\t\tif (!tx) {\r\n\t\t\tconst db = await this.dbPromise;\r\n\t\t\ttx = db.transaction('store', 'readwrite');\r\n\t\t}\r\n\r\n\t\tconst tree = await this.loadWithFilter((entry) => {\r\n\t\t\tconst entryKey = (entry.node.parent || '') + entry.node.name;\r\n\t\t\treturn entryKey.startsWith(key);\r\n\t\t}, tx);\r\n\r\n\t\tif (!tree.hasOwnProperty(key)) {\r\n\t\t\tthrow Error(`Entry ${key} doesn't exist`);\r\n\t\t}\r\n\r\n\t\treturn tree;\r\n\t}\r\n\r\n\tgetHierarchy = async (key, transaction) => {\r\n\t\tlet tx = transaction;\r\n\t\tif (!tx) {\r\n\t\t\tconst db = await this.dbPromise;\r\n\t\t\ttx = db.transaction('store', 'readwrite');\r\n\t\t}\r\n\r\n\t\tconst hierarchy = await this.loadWithFilter((entry) => {\r\n\t\t\tconst entryKey = (entry.node.parent || '') + entry.node.name;\r\n\t\t\treturn entryKey.startsWith(key) || key.startsWith(entryKey);\r\n\t\t}, tx);\r\n\r\n\t\tif (!hierarchy.hasOwnProperty(key)) {\r\n\t\t\tthrow Error(`Entry ${key} doesn't exist`);\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\t}\r\n\t\r\n\t// Add new entry to DB, handle cache coherency and data integrity\r\n\tadd = async (data, transaction) => {\r\n\t\tconst key = data.parent + data.name;\r\n\r\n\t\tlet tx = transaction;\r\n\t\tif (!tx) {\r\n\t\t\tconst db = await this.dbPromise;\r\n\t\t\ttx = db.transaction('store', 'readwrite');\r\n\t\t}\r\n\t\tconst store = tx.objectStore('store');\r\n\r\n\t\t// Check if the key is already exist\r\n\t\tlet exist = true;\r\n\t\ttry {\r\n\t\t\tawait this.get(key, tx);\r\n\t\t} catch(error) {\r\n\t\t\texist = false;\r\n\t\t}\r\n\r\n\t\tif (exist) {\r\n\t\t\tthrow Error(`Entry ${key} already exist`);\r\n\t\t}\r\n\t\t\r\n\t\t// Update cache: attache to parent\r\n\t\tconst parent = dbCache[data.parent];\r\n\t\tparent.children.push(key);\r\n\r\n\t\t// Update cache: add entry\r\n\t\tdbCache[key] = {\r\n\t\t\tnode: data,\r\n\t\t\taddress: parent.address + parseInt(data.offset, 16),\r\n\t\t\tchildren: []\r\n\t\t};\r\n\r\n\t\t// Update DB: commit the entry\r\n\t\tstore.add(data, key);\r\n\r\n\t\treturn tx.complete;\r\n\t}\r\n\r\n\t// Updata props of an entry, handle cache coherency and data integrity\r\n\tset = async (key, props, transaction) => {\r\n\t\tif (key === '/') {\r\n\t\t\tthrow Error(`Root entry is readonly`);\r\n\t\t}\r\n\t\t\r\n\t\tlet tx = transaction;\r\n\t\tif (!tx) {\r\n\t\t\tconst db = await this.dbPromise;\r\n\t\t\ttx = db.transaction('store', 'readwrite');\r\n\t\t}\r\n\t\tconst store = tx.objectStore('store');\r\n\r\n\t\tlet entry = await this.get(key, tx);\r\n\r\n\t\t// Find the new key\r\n\t\tconst newParent = props.parent || entry.node.parent;\r\n\t\tconst newName = props.name || entry.node.name;\r\n\t\tconst newKey = (newParent || '') + newName;\r\n\r\n\t\t// New parent must exist\r\n\t\tconst newParentEntry = await this.get(newParent, tx);\r\n\t\tconst parentEntry = await this.get(entry.node.parent, tx);\r\n\r\n\t\t// Cannot override an existing entry\r\n\t\tif (newKey !== key && dbCache.hasOwnProperty(newKey)) {\r\n\t\t\tthrow Error(`Entry ${newKey} already exist`);\r\n\t\t}\r\n\r\n\t\t// Calculate address offset we should apply later\r\n\t\tlet offset = newParentEntry.address - parentEntry.address;\r\n\t\tif (props.offset) {\r\n\t\t\toffset += parseInt(props.offset, 16) - parseInt(entry.node.offset, 16);\r\n\t\t}\r\n\r\n\t\t// Update the entry, ignore the key change\r\n\t\tconst update = async (entry, props) => {\r\n\t\t\tconst node = entry.node;\r\n\t\t\tconst key  = (node.parent || '') + node.name;\r\n\t\t\t\r\n\t\t\tfor (let name in props) {\r\n\t\t\t\tif (props.hasOwnProperty(name) && name !== 'parent' && name !== 'name') {\r\n\t\t\t\t\tnode[name] = props[name];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn store.put(node, key);\r\n\t\t}\r\n\r\n\t\t// Apply the key change only. This is EXTREMELY tricky.\r\n\t\tconst move = async(entry, dstKey) => {\r\n\t\t\tconst srcKey = entry.node.parent + entry.node.name;\r\n\t\t\tconst [dstParentKey, dstName] = splitKey(dstKey);\r\n\r\n\t\t\t// Recursion: move all children\r\n\t\t\tfor (let i = 0; i < entry.children.length; i++) {\r\n\t\t\t\tconst childKey = entry.children[i];\r\n\t\t\t\tconst childEntry = dbCache[childKey];\r\n\t\t\t\tconst newKey = dstKey + childEntry.node.name;\r\n\t\t\t\tawait move(childEntry, newKey);\r\n\t\t\t}\r\n\r\n\t\t\t// Fix the cache\r\n\t\t\tdelete dbCache[srcKey];\r\n\t\t\tentry.node.parent = dstParentKey;\r\n\t\t\tentry.node.name   = dstName;\r\n\t\t\tentry.children    = entry.children.map(\r\n\t\t\t\tchildKey =>\tdstKey + childKey.slice(srcKey.length)\r\n\t\t\t);\r\n\t\t\tdbCache[dstKey] = entry;\r\n\r\n\t\t\t// Update the DB\r\n\t\t\tawait store.delete(srcKey);\r\n\t\t\tawait store.put(entry.node, dstKey);\r\n\t\t}\t\t\r\n\r\n\t\tawait update(entry, props);\r\n\r\n\t\tif (key !== newKey) {\r\n\t\t\tawait move(entry, newKey);\r\n\t\t\tparentEntry.children.splice(parentEntry.children.indexOf(key), 1);\r\n\t\t\tnewParentEntry.children.push(newKey);\r\n\t\t}\r\n\r\n\t\t// Apply address offset introduced by the change\r\n\t\tconst applyOffset = (root, offset) => {\r\n\t\t\troot.address += offset;\r\n\t\t\troot.children.forEach(childKey => {\r\n\t\t\t\tapplyOffset(dbCache[childKey], offset);\r\n\t\t\t});\r\n\t\t};\r\n\t\tif (offset) {\r\n\t\t\tapplyOffset(entry, offset);\r\n\t\t}\r\n\r\n\t\treturn tx.complete;\r\n\t}\r\n\t\r\n\t// Recursively delete all entries under `key` (inclusive)\r\n\tdelete = async (key, transaction) => {\r\n\t\tlet tx = transaction;\r\n\t\tif (!tx) {\r\n\t\t\tconst db = await this.dbPromise;\r\n\t\t\ttx = db.transaction('store', 'readwrite');\r\n\t\t}\r\n\t\tconst store = tx.objectStore('store');\r\n\r\n\t\tconst entry = await this.get(key, tx);\r\n\r\n\t\tlet _delete = async (root) => {\r\n\t\t\tfor (let i = 0; i < root.children.length; i++) {\r\n\t\t\t\tconst child = await this.get(root.children[i], tx);\r\n\t\t\t\tawait _delete(child);\r\n\t\t\t}\r\n\r\n\t\t\tconst rootKey = (root.node.parent || '') + root.node.name;\r\n\t\t\tawait store.delete(rootKey);\r\n\t\t\tdelete dbCache[rootKey];\r\n\t\t}\r\n\t\t\r\n\t\tawait _delete(entry);\r\n\t\t\r\n\t\tif (entry.node.parent) {\r\n\t\t\tconst parent = await this.get(entry.node.parent, tx);\r\n\t\t\tparent.children.splice(parent.children.indexOf(key), 1);\r\n\t\t}\r\n\t\t\r\n\t\treturn tx.complete;\r\n\t}\r\n\r\n\t// Delete everything except the root (i.e. '/').\r\n\treset = async (transaction) => {\r\n\t\tlet tx = transaction;\r\n\t\tif (!tx) {\r\n\t\t\tconst db = await this.dbPromise;\r\n\t\t\ttx = db.transaction('store', 'readwrite');\r\n\t\t}\r\n\t\tconst store = tx.objectStore('store');\r\n\r\n\t\ttry {\r\n\t\t\tawait this.delete('/', tx);\r\n\t\t} catch(error) {\r\n\t\t\t// ignore - DB could be empty\r\n\t\t}\r\n\r\n\t\tconst entry = {\r\n\t\t\tname: '/',\r\n\t\t\toffset: '0x00000000'\r\n\t\t};\r\n\t\tawait store.put(entry, '/');\r\n\r\n\t\tdbCache = [];\r\n\t\tdbCache['/'] = {\r\n\t\t\tnode: entry,\r\n\t\t\taddress: 0,\r\n\t\t\tchildren: []\r\n\t\t};\r\n\t}\r\n\r\n\tparse = (rawData) => {\r\n\t\tconst data = rawData.reduce((prev, curr) => {\r\n\t\t\tconst key = (curr.parent || \"\") + curr.name;\r\n\t\t\tif (prev[key]) {\r\n\t\t\t\tprev[key].node = curr;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tprev[key] = {\r\n\t\t\t\t\tnode: curr,\r\n\t\t\t\t\tchildren: []\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif (curr.parent) {\r\n\t\t\t\tif (prev[curr.parent]) {\r\n\t\t\t\t\tprev[curr.parent].children.push(key);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tprev[curr.parent] = {\r\n\t\t\t\t\t\tchildren: [key]\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn prev;\r\n\t\t}, []);\r\n\r\n\t\tconst parseAddress = (root, base = 0) => {\r\n\t\t\troot['address'] = base + parseInt(root.node.offset, 16);\r\n\t\t\troot['children'].forEach(childKey => {\r\n\t\t\t\tparseAddress(data[childKey], root['address']);\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tparseAddress(data['/']);\r\n\r\n\t\treturn data;\r\n\t}\r\n}\r\n\r\nexport default RegDb;\r\n\r\nexport let regDb = new RegDb();\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { regDb } from '../RegDb';\r\n\r\nimport './DataPicker.css'\r\n\r\n//------------------------------------------------------------\r\nclass DataPicker extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.fileRef = React.createRef();\r\n\r\n\t\tthis.state = {\r\n\t\t\tnext: undefined\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.state.next) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"data-source\">\r\n\t\t\t\t\t<label className=\"data-picker\" onClick={this.startFresh}>\r\n\t\t\t\t\t\tStart Fresh\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<label className='data-picker'>\r\n\t\t\t\t\t\t<input type=\"file\" ref={this.fileRef} onChange={this.importData}/>\r\n\t\t\t\t\t\tImport from JSON\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else if (this.state.next === 'add') {\r\n\t\t\treturn (\r\n\t\t\t\t<Redirect to=\"/new/group/\" />\r\n\t\t\t);\r\n\t\t} else if (this.state.next === 'view') {\r\n\t\t\treturn (\r\n\t\t\t\t<Redirect to=\"/view/\" />\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tstartFresh = () => {\r\n\t\tregDb.reset().then(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tnext: 'add'\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\timportData = (e) => {\r\n\t\tconst file = this.fileRef.current.files[0];\r\n\r\n\t\tif (file.type.match(/application\\/json/)) {\r\n\t\t\tlet reader = new FileReader();\r\n\r\n\t\t\treader.onload = (e) => {\r\n    \t\t\tregDb.import(reader.result).then(() => {\r\n    \t\t\t\tthis.setState({\r\n\t\t\t\t\t\tnext: 'view'\r\n\t\t\t\t\t});\r\n    \t\t\t});\r\n    \t\t};\r\n\r\n    \t\treader.readAsText(file);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default DataPicker;\r\n","import React, { Component, Fragment } from 'react';\nimport { Redirect, Link } from \"react-router-dom\";\n\nimport './GroupViewer.css';\n\nclass GroupTitle extends Component {\n\trender() {\n\t\tconst data = this.props.data;\n\t\tconst path = data.parent + data.name;\n\t\treturn (\n\t\t\t<Link className=\"group-title\" to={'/view' + path}>\n\t\t\t\t<span>{data.name.slice(0, -1)}</span>\n\t\t\t\t<span>0x{this.props.address.toString(16).toUpperCase()}</span>\n\t\t\t</Link>\n\t\t);\n\t}\n}\n\nclass RegTitle extends Component {\n  render() {\n    const path = this.props.path;\n\tconst reg  = this.props.data[path].node;\n\tconst address = this.props.data[path].address;\n    return (\n\t\t<Link className=\"reg-title\" \n\t\t\tto={{\n\t\t\tpathname: \"/view\" + path, \n\t\t\tstate: {data: reg}\n\t\t\t}} \n\t\t>\n\t\t\t<span>{reg.name}</span>\n\t\t\t<span>{reg.desc_short}</span>\n\t\t\t<span>0x{address.toString(16).toUpperCase()}</span>\n\t\t\t<span>+0x{reg.offset.toUpperCase()}</span>\n\t\t</Link>\n    );\n  }\n}\n\nclass Group extends Component {\n\trender() {\n\t\tif (this.props.data) {\n\t\t\tconst root = this.props.data[this.props.path];\n\t\t\tconst node = root.node;\n\t\t\tconst address = root.address;\n\t\t\tconst children = root.children;\n\t\t\tlet content = [];\n\n\t\t\tchildren.forEach((childKey) => {\n\t\t\t\tif (childKey.endsWith('/')) {\n\t\t\t\t\tcontent.push(\n\t\t\t\t\t\t<li key={childKey}><Group path={childKey} data={this.props.data}/></li>\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tcontent.push(\n\t\t\t\t\t\t<li key={childKey}><RegTitle path={childKey} data={this.props.data}/></li>\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\treturn (\n\t\t\t\t<Fragment>\n\t\t\t\t\t{\n\t\t\t\t\t\t// Render a title for non-root group\n\t\t\t\t\t\tnode && node.parent && <GroupTitle data={node} address={address} />\n\t\t\t\t\t}\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// Now render all the children\n\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t}\n\t\t\t\t\t</ol>\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t} else { // The group doesn't exit, ask the user to create one (redirect)\n\t\t\treturn (<Redirect to={\"/edit\" + this.props.path}/>);\n\t\t}\n\t}\n}\n\nclass GroupViewer extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"reg-group\">\n\t\t\t\t<Group {...this.props} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default GroupViewer;\n","import React, { Component } from 'react';\r\n\r\nimport { getCoordinate } from './Utils';\r\n\r\nimport './RegContainer.css';\r\n\r\n//------------------------------------------------------------\r\nexport class UnusedField extends Component {\r\n\trender() {\r\n\t\tlet fragments = [];\r\n\t\tlet low = this.props.low;\r\n\t\tlet high = this.props.high;\r\n\t\tlet roundUp = (p,w) => ((Math.floor(p / w) + 1) * w - 1);\r\n\r\n\t\twhile(low <= high) {\r\n\t\t\tconst pos = Math.min(high, roundUp(low, this.props.width));\r\n\t\t\tconst row = Math.floor(low / this.props.width) + 1;\r\n\t\t\tconst col = this.props.width - pos % this.props.width\r\n\t\t\tconst width = pos - low + 1;\r\n\t\t\tfragments.push(\r\n\t\t\t\t<FieldFragment key={pos} name={\"Rsvd\"} row={row} col={col} width={width} valid={false}/>\r\n\t\t\t);\r\n\t\t\tlow = pos + 1;\r\n\t\t}\r\n\r\n\t\treturn fragments;\r\n\t}\r\n}\r\n\r\nexport class Field extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\trenderMode: \"view\"\r\n\t\t};\r\n\t}\r\n\r\n\tonClick = (e) => {\r\n\t\tif (!this.props.readonly) {\r\n\t\t\tthis.setState({\r\n\t\t\t\trenderMode: \"updating\"\r\n\t\t\t});\r\n\t\t\tthis.props.onStartUpdating(this.props.bits[0]);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet low  = this.props.bits[0];\r\n\t\tlet high = this.props.bits[1];\r\n\t\t\r\n\t\tlet fragments = [];\r\n\t\tlet roundUp = (p,w) => ((Math.floor(p / w) + 1) * w - 1);\r\n\r\n\t\twhile(low <= high) {\r\n\t\t\tconst pos = Math.min(high, roundUp(low, this.props.width));\r\n\t\t\tconst [row, col] = getCoordinate(pos, this.props.width);\r\n\t\t\tconst width = pos - low + 1;\r\n\t\t\tfragments.push(\r\n\t\t\t\t<FieldFragment \r\n\t\t\t\t\tkey={low}\r\n\t\t\t\t\tname={this.props.name}\r\n\t\t\t\t\trow={row}\r\n\t\t\t\t\tcol={col}\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\tvalid={true}\r\n\t\t\t\t\tonClick={this.onClick}\r\n\t\t\t\t\treadonly={this.props.readonly}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tlow = pos + 1;\r\n\t\t}\r\n\t\treturn fragments;\r\n\t}\r\n}\r\n\r\n/*\r\n * Props:\r\n *   - row: row number in the grid (base 1)\r\n *   - col: column number in the grid (base 1)\r\n *   - width: bit width of the fragment\r\n *   - name: name of the field\r\n */\r\n class FieldFragment extends Component {\r\n \trender() {\r\n \t\tconst fragStyle = {\r\n \t\t\tgridRow: this.props.row,\r\n \t\t\tgridColumnStart: this.props.col,\r\n \t\t\tgridColumnEnd: this.props.col + this.props.width,\r\n\t\t};\r\n\t\tconst className = this.props.valid ? \"field-fragment\" : \"field-fragment-unused\";\r\n\r\n \t\treturn (\r\n \t\t\t<div \r\n \t\t\t\tclassName={className} \r\n \t\t\t\tstyle={fragStyle}\r\n \t\t\t\tonClick={this.props.onClick}\r\n \t\t\t>\r\n \t\t\t\t{this.props.name}\r\n \t\t\t</div>\r\n \t\t);\r\n \t}\r\n }\r\n\r\nclass BitPosMarker extends Component {\r\n \trender() {\r\n \t\tlet marker = [];\r\n\r\n \t\tfor (let i=this.props.width-1; i>=0; i--) {\r\n \t\t\tmarker.push(\r\n \t\t\t\t<div key={i} className=\"bit-pos-indicator\">{i}</div>\r\n \t\t\t);\r\n \t\t}\r\n\r\n \t\treturn (\r\n \t\t\t<div className=\"bit-pos-marker\"> {marker} </div>\r\n \t\t);\r\n \t}\r\n}\r\n\r\nclass ByteOffset extends Component {\r\n \trender() {\r\n \t\tlet offsets = [];\r\n    \tconst step = this.props.width / 8;  // bytes per line\r\n\r\n\t    for (let i=0; i<this.props.size; i+=step) {\r\n\t    \tconst labelLow  = (\"00\" + (i).toString(16)).substr(-2).toUpperCase();\r\n\t    \tconst labelHigh = (\"00\" + (i + step - 1).toString(16)).substr(-2).toUpperCase();\r\n\t    \toffsets.push(<div key={i}>{labelHigh}-{labelLow}H</div>);\r\n\t    }\r\n\r\n    \treturn (\r\n    \t\t<div className=\"byte-offset\"> {offsets} </div>\r\n    \t);\r\n\t}\r\n}\r\n\r\nexport class RegContainer extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"reg-container\">\r\n\t\t\t\t<BitPosMarker width={this.props.width} />\r\n\t\t\t\t<ByteOffset width={this.props.width} size={this.props.size} />\r\n\t\t\t\t<div className=\"field-container\"> {this.props.children} </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React, { Component, Fragment } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { RegContainer, Field, UnusedField } from './RegContainer';\r\nimport { Warning } from './Form';\r\n\r\nimport { num2hexstr } from './Utils';\r\n\r\nimport './RegisterViewer.css';\r\n\r\n//------------------------------------------------------------\r\nclass RegisterViewer extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdecodeString: undefined,\r\n\t\t\tdecodeArray: [],\r\n\t\t\tdecodeError: [],\r\n\t\t\tfocus: [0, 1]\r\n\t\t};\r\n\t}\r\n\r\n\tonInputChange = (e) => {\r\n\t\tconst target = e.target;\r\n\t\tconst name = target.name;\r\n\t\tconst value = target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\r\n\tdecode = (e) => {\r\n\t\tconst target = e.target;\r\n\t\tconst value = target.value;\r\n\r\n\t\tconst re = /^(0x)?[0-9a-f]+$/i\r\n\t\tlet segs = value.split(',').map(s => s.trim()).filter(s => s !== '');\r\n\r\n\t\tlet error = [];\r\n\r\n\t\tfor (let i = 0; i < segs.length; i++) {\r\n\t\t\tif (!re.test(segs[i])) {\r\n\t\t\t\terror.push(\r\n\t\t\t\t\t<li key={i}>{segs[i]}</li>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\tdecodeString: value,\r\n\t\t\tdecodeArray: segs.filter(s => re.test(s)).map(s => parseInt(s, 16)),\r\n\t\t\tdecodeError: error\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tparseField = (val, [low, high]) => {\r\n\t\tconst mask = (1 << (high - low + 1)) - 1;\r\n\t\treturn (val >> low) & mask;\r\n\t}\r\n\r\n\tshiftFocus = (n) => {\r\n\t\tthis.setState((state) => {\r\n\t\t\tlet newFocus = state.focus.slice(0);\r\n\t\t\tnewFocus.shift();\r\n\t\t\tnewFocus.push(n);\r\n\t\t\tconsole.log(newFocus);\r\n\t\t\treturn {\r\n\t\t\t\tfocus: newFocus\r\n\t\t\t};\r\n\t\t})\r\n\t}\r\n\r\n\tgetDescription = () => {\r\n\t\tconst data = this.props.data.node;\r\n\t\tconst address = this.props.data.address;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<p>Address: 0x{address.toString(16).toUpperCase()}</p>\r\n\t\t\t\t<p>{data.desc_short}</p>\r\n\t\t\t\t<p>{data.desc_long}</p>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tgetRegMap = () => {\r\n\t\tconst fields = this.props.data.node.fields;\r\n\r\n\t\tlet pos = 0;\r\n\t\tlet children = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < fields.length; i++) {\r\n\t\t\tif (pos < fields[i].bits[0]) {\r\n\t\t\t\tchildren.push(\r\n\t\t\t\t\t<UnusedField key={pos} low={pos} high={fields[i].bits[0] - 1} width={32} />\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tchildren.push(\r\n\t\t\t\t<Field key={fields[i].bits[0]} \r\n\t\t\t\t\t{...fields[i]} \r\n\t\t\t\t\twidth={32}\r\n\t\t\t\t\treadonly\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tpos = fields[i].bits[1] + 1;\r\n\t\t}\r\n\r\n\t\tif (pos < this.props.data.node.size * 8) {\r\n\t\t\tchildren.push(\r\n\t\t\t\t<UnusedField key={pos} low={pos} high={this.props.data.node.size * 8 - 1} width={32} />\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<RegContainer width={32} size={this.props.data.node.size}>\r\n\t\t\t\t{children}\r\n\t\t\t</RegContainer>\r\n\t\t);\r\n\t}\r\n\r\n\tgetFieldTable = () => {\r\n\t\tlet rows = [];\r\n\t\tconst fields = this.props.data.node.fields;\r\n\r\n\t\tif (fields.length === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet extraHeader = [];\r\n\t\tthis.state.decodeArray.forEach((n, i) => {\r\n\t\t\tif (i === this.state.focus[0] || i === this.state.focus[1]) {\r\n\t\t\t\textraHeader.push(\r\n\t\t\t\t\t<th key={i} className=\"focus-header\" colSpan=\"2\">\r\n\t\t\t\t\t\t{num2hexstr(n)}\r\n\t\t\t\t\t</th>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\textraHeader.push(\r\n\t\t\t\t\t<th key={i} className=\"value-header\" colSpan=\"2\" onClick={() => this.shiftFocus(i)}>\r\n\t\t\t\t\t\t{num2hexstr(n)}\r\n\t\t\t\t\t</th>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfields.forEach((field) => {\r\n\t\t\tlet values = [];\r\n\t\t\tthis.state.decodeArray.forEach((n, i) => {\r\n\t\t\t\tlet otherVal;\r\n\t\t\t\tif (i === this.state.focus[0]) {\r\n\t\t\t\t\totherVal = this.state.decodeArray[this.state.focus[1]];\r\n\t\t\t\t} else if (i === this.state.focus[1]) {\r\n\t\t\t\t\totherVal = this.state.decodeArray[this.state.focus[0]];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst fieldVal = this.parseField(n, field.bits);\r\n\r\n\t\t\t\tlet highlight;\r\n\t\t\t\tif (otherVal) {\r\n\t\t\t\t\tconst otherFieldVal = this.parseField(otherVal, field.bits);\r\n\t\t\t\t\thighlight = (fieldVal !== otherFieldVal);\r\n\t\t\t\t} \r\n\t\t\t\tvalues.push(\r\n\t\t\t\t\t<td key={i+\"d\"} className={highlight ? \"highlight-field\" : \"\"} >\r\n\t\t\t\t\t\t{fieldVal}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t);\r\n\t\t\t\tvalues.push(\r\n\t\t\t\t\t<td key={i+\"h\"} className={highlight ? \"highlight-field\" : \"\"} >\r\n\t\t\t\t\t\t0x{fieldVal.toString(16).toUpperCase()}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\tlet symbolics = null;\r\n\t\t\tif (field.value && field.value.length) {\r\n\t\t\t\tsymbolics = \r\n\t\t\t\t\t<div className=\"symbolic-values\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfield.value.map((v, i) => \r\n\t\t\t\t\t\t\t\t<Fragment key={i}>\r\n\t\t\t\t\t\t\t\t\t<label>{v.value}</label>\r\n\t\t\t\t\t\t\t\t\t<label>=</label>\r\n\t\t\t\t\t\t\t\t\t<label>0x{v.value.toString(16).toUpperCase()}</label>\r\n\t\t\t\t\t\t\t\t\t<label>=</label>\r\n\t\t\t\t\t\t\t\t\t<label>{v.name}</label>\r\n\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\trows.push(\r\n\t\t\t\t<tr key={field.bits[0]}>\r\n\t\t\t\t\t<td>{field.name}</td>\r\n\t\t\t\t\t<td>{field.bits[1]}:{field.bits[0]}</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t{field.meaning || \"N/A\"}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tsymbolics\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t{values}\r\n\t\t\t\t</tr>\r\n\t\t\t);\r\n\t\t})\r\n\r\n\t\treturn (\r\n\t\t\t<table className=\"field-table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t<th>Bit</th>\r\n\t\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t\t{extraHeader}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{rows}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t);\r\n\t}\r\n\r\n\tgetDecodeForm = () => {\r\n\t\treturn this.props.data.node.fields.length ? (\r\n\t\t\t<form className=\"reg-decode\">\r\n\t\t\t\t<p>Decode comma separated hex number:</p>\r\n\t\t\t\t<textarea name=\"decodeString\" onChange={this.decode} value={this.state.decodeString || \"\"} />\r\n\t\t\t\t{ this.state.decodeError.length > 0 && <Warning>Invalid hex number:<ul>{this.state.decodeError}</ul></Warning>}\r\n\t\t\t</form>\r\n\t\t) : null;\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tif (this.props.data.node) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"reg-content\">\r\n\t\t\t\t\t{this.getDescription()}\r\n\t\t\t\t\t{this.getRegMap()}\r\n\t\t\t\t\t{this.getFieldTable()}\r\n\t\t\t\t\t{this.getDecodeForm()}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<Redirect to={\"/edit\" + this.props.path} />\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default RegisterViewer;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { regDb } from '../RegDb';\r\nimport { Warning, NameInput, Keyword } from './Form';\r\n\r\nimport './GroupEditor.css';\r\n\r\n//------------------------------------------------------------\r\n/*\r\n * Props:\r\n *   - data\r\n *      - undefined, create new group\r\n *      - otherwise, edit existing one\r\n *   - path\r\n *      - \r\n */\r\nclass GroupEditor extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tif (this.props.op === '/edit') {\r\n\t\t\tconst node = this.props.data.node;\r\n\t\t\tthis.state = {\r\n\t\t\t\tname: node.name.slice(0, -1),\r\n\t\t\t\tparent: node.parent,\r\n\t\t\t\toffset: node.offset,\r\n\t\t\t\t\r\n\t\t\t\terror: undefined\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthis.state = {\r\n\t\t\t\tname: '',\r\n\t\t\t\tparent: this.props.path,\r\n\t\t\t\toffset: '0',\r\n\r\n\t\t\t\terror: undefined\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tvalidate = (key, val) => {\r\n\t\tconst validator = {\r\n\t\t\t'name': value => {\r\n\t\t\t\tif (value.match(/^[a-zA-Z][a-zA-Z0-9_ ]*$/)) {\r\n\t\t\t\t\tif (value.toUpperCase() === this.props.data.node.name.slice(0, -1).toUpperCase()) {\r\n\t\t\t\t\t\treturn [false, <li key=\"name\">Group name: <Keyword>{value}</Keyword> is the same as parent</li>];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn [true];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value.match(/^\\s*$/)) {\r\n\t\t\t\t\treturn [false, <li key=\"name\">Group name: it cannot be empty.</li>]\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [false, <li key=\"name\">Group name: <Keyword>{value}</Keyword> is an invalid name</li>];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'parent': value => {\r\n\t\t\t\tif (value.match(/^\\/[/a-zA-Z0-9_ ]*$/)) {\r\n\t\t\t\t\treturn [true];\r\n\t\t\t\t} else if (value.match(/^\\s*$/)) {\r\n\t\t\t\t\treturn [false, <li key=\"parent\">Group parent: it cannot be empty.</li>]\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [false, <li key=\"parent\">Group parent: <Keyword>{value}</Keyword> is an invalid name</li>];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'offset': value => {\r\n\t\t\t\tif (value.match(/^(0x)?[0-9a-f]+$/i)) {\r\n\t\t\t\t\treturn [true];\r\n\t\t\t\t} else if (value.match(/^\\s*$/)) {\r\n\t\t\t\t\treturn [false, <li key=\"offset\">Group offset: it cannot be empty.</li>]\r\n\t\t\t\t}  else {\r\n\t\t\t\t\treturn [false, <li key=\"offset\">Group offset: <Keyword>{value}</Keyword> is an invalid hex number</li>]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet error = [];\r\n\t\t\r\n\t\tfor (let prop in validator) {\r\n\t\t\tlet rv;\r\n\t\t\tif (key === prop) {\r\n\t\t\t\trv = validator[prop](val);\r\n\t\t\t} else {\r\n\t\t\t\trv = validator[prop](this.state[prop]);\r\n\t\t\t}\r\n\r\n\t\t\tif (!rv[0]) {\r\n\t\t\t\terror.push(rv[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (error.length) {\r\n\t\t\treturn <ul>{error}</ul>;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tonInputChange = (e) => {\r\n\t\tconst target = e.target;\r\n\t\tconst name = target.name;\r\n\t\tconst value = target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value,\r\n\t\t\terror: this.validate(name, value)\r\n\t\t});\r\n\t}\r\n\r\n\tcommitChange = () => {\r\n\t\tconst data = {\r\n\t\t\tname: this.state.name + '/',\r\n\t\t\tparent: this.state.parent.endsWith('/') ? this.state.parent : this.state.parent + '/',\r\n\t\t\toffset: this.state.offset\r\n\t\t};\r\n\r\n\t\tlet promise;\r\n\t\tif (this.props.op === '/edit') { // update\r\n\t\t\tpromise = regDb.set(this.props.path, data);\r\n\t\t} else { // add\r\n\t\t\tpromise = regDb.add(data);\r\n\t\t}\r\n\r\n\t\tpromise.then(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdone: true\r\n\t\t\t});\r\n\t\t}).catch((error) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: error.message\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tif (this.state.done) {\r\n\t\t\tconst parent = this.state.parent.endsWith('/') ? this.state.parent : this.state.parent + '/';\r\n\t\t\treturn (\r\n\t\t\t\t<Redirect to={\"/view\" + parent + this.state.name + \"/\"}/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div className=\"group-editor\">\r\n\t\t\t\t\t<label name=\"name-label\">Name:</label>\r\n\t\t\t\t\t<NameInput name=\"name\" required onChange={this.onInputChange} value={this.state.name || \"\"}/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<label name=\"parent-label\">Parent:</label>\r\n\t\t\t\t\t{ \r\n\t\t\t\t\t\tthis.props.op === '/edit' ? \r\n\t\t\t\t\t\t<input name=\"parent\" type=\"text\" required onChange={this.onInputChange} value={this.state.parent || \"\"}/> :\r\n\t\t\t\t\t\t<label>{this.state.parent}</label>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t<label name=\"offset-label\">Offset:</label>\r\n\t\t\t\t\t<input name=\"offset\" type=\"text\" required onChange={this.onInputChange} value={this.state.offset || \"\"}/>\r\n\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tonClick={this.commitChange} \r\n\t\t\t\t\t\tdisabled={this.state.error}>\r\n\t\t\t\t\t\tDone\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Warning>{this.state.error}</Warning>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n \t}\r\n}\r\n\r\nexport default GroupEditor;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { regDb } from '../RegDb';\r\nimport { RegContainer, Field } from './RegContainer';\r\nimport { parseIntStr, getCoordinate, isInRange } from './Utils';\r\nimport { Warning, Keyword } from './Form';\r\n\r\nimport './RegEditor.css';\r\n\r\nconst MaxRegSize = 64; // in bytes\r\n\r\n//------------------------------------------------------------\r\nclass RegEditor extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tif (this.props.op === '/edit') {\r\n\t\t\tconst node = this.props.data.node;\r\n\t\t\tthis.state = {\r\n\t\t\t\tname: node.name,\r\n\t\t\t\tparent: node.parent,\r\n\t\t\t\toffset: node.offset,\r\n\t\t\t\tsize: node.size,\r\n\t\t\t\tdesc_short: node.desc_short,\r\n\t\t\t\tdesc_long: node.desc_long,\r\n\t\t\t\tfields: node.fields,\r\n\t\t\t\t\r\n\t\t\t\tisEditingField: false,\r\n\t\t\t\tdone: false,\r\n\t\t\t\terror: undefined\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthis.state = {\r\n\t\t\t\tname: '',\r\n\t\t\t\tparent: this.props.path,\r\n\t\t\t\toffset: '0',\r\n\t\t\t\tsize: '4',\r\n\t\t\t\tdesc_short: 'N/A',\r\n\t\t\t\tdesc_long: '',\r\n\t\t\t\tfields: [],\r\n\t\t\t\t\r\n\t\t\t\tisEditingField: false,\r\n\t\t\t\tdone: false,\r\n\t\t\t\terror: undefined\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tvalidate = (key, val) => {\r\n\t\tconst validator = {\r\n\t\t\t'name': value => {\r\n\t\t\t\tif (value.match(/^[a-zA-Z][a-zA-Z0-9_ ]*$/)) {\r\n\t\t\t\t\tif (value.toUpperCase() === this.props.data.node.name.slice(0, -1).toUpperCase()) {\r\n\t\t\t\t\t\treturn [false, <li key=\"name\">Register name <Keyword>{value}</Keyword> is the same as parent</li>];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn [true];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value.match(/^\\s*$/)) {\r\n\t\t\t\t\treturn [false, <li key=\"name\">Register name cannot be empty.</li>]\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [false, <li key=\"name\">Register name <Keyword>{value}</Keyword> is invalid</li>];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'parent': value => {\r\n\t\t\t\tif (value.match(/^\\/[/a-zA-Z0-9_ ]*$/)) {\r\n\t\t\t\t\treturn [true];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [false, <li key=\"parent\"><Keyword>{value}</Keyword> is an invalid parent name</li>];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'offset': value => {\r\n\t\t\t\tif (value.match(/^(0x)?[0-9a-f]+$/i)) {\r\n\t\t\t\t\treturn [true];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [false, <li key=\"offset\">Register offset: <Keyword>{value}</Keyword> is an invalid hex number</li>]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'size': value => {\r\n\t\t\t\tif (value.match(/^[1-9][0-9]*/) && parseInt(value, 10) <= MaxRegSize) {\r\n\t\t\t\t\treturn [true];\r\n\t\t\t\t} else if (value.match(/^\\s*$/)) {\r\n\t\t\t\t\treturn [false, <li key=\"size\">Register size cannot be empty.</li>]\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [false, <li key=\"size\">Register size <Keyword>{value}</Keyword> is invalid. It should be in range <Keyword>[1, {MaxRegSize}]</Keyword>.</li>]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'desc_short': value => {\r\n\t\t\t\tif (value.match(/\\S/)) {\r\n\t\t\t\t\treturn [true];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [false, <li key=\"desc_short\">Register summary cannot be empty</li>]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet error = [];\r\n\t\t\r\n\t\tfor (let prop in validator) {\r\n\t\t\tlet rv;\r\n\t\t\tif (key === prop) {\r\n\t\t\t\trv = validator[prop](val);\r\n\t\t\t} else {\r\n\t\t\t\trv = validator[prop](this.state[prop]);\r\n\t\t\t}\r\n\r\n\t\t\tif (!rv[0]) {\r\n\t\t\t\terror.push(rv[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (error.length) {\r\n\t\t\treturn <ul>{error}</ul>;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tonInputChange = (e) => {\r\n\t\tconst target = e.target;\r\n\t\tconst name = target.name;\r\n\t\tconst value = target.value;\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value,\r\n\t\t\terror: this.validate(name, value)\r\n\t\t});\r\n\t}\r\n\r\n\tcanSubmit = () => {\r\n\t\treturn !this.state.error;\r\n\t}\r\n\r\n\taddField = (field) => {\r\n\t\tthis.setState((state) => ({\r\n\t\t\tfields: [...state.fields, field].sort((a,b) => a.bits[0] - b.bits[0]),\r\n\t\t\terror: undefined\r\n\t\t}));\r\n\t}\r\n\r\n\tupdateField = (pos, field) => {\r\n\t\tthis.setState((state) => {\r\n\t\t\tlet newFields = state.fields.slice(0);\r\n\t\t\tconst idx = newFields.findIndex((e) => e.bits[0] === pos);\r\n\t\t\tnewFields[idx] = field;\r\n\r\n\t\t\treturn ({\r\n\t\t\t\tfields: newFields.sort((a,b) => a.bits[0] - b.bits[0]),\r\n\t\t\t\terror: undefined\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tdeleteField = (pos) => {\r\n\t\tthis.setState((state) => {\r\n\t\t\tlet newFields = state.fields.slice(0);\r\n\t\t\tconst idx = newFields.findIndex((e) => e.bits[0] === pos);\r\n\t\t\tnewFields.splice(idx, 1);\r\n\r\n\t\t\treturn ({\r\n\t\t\t\tfields: newFields,\r\n\t\t\t\terror: undefined\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tonEditingField = (isEditing) => {\r\n\t\tthis.setState({\r\n\t\t\tisEditingField: isEditing\r\n\t\t});\r\n\t}\r\n\r\n\tcommitChange = () => {\r\n\t\tconst error = this.validate(undefined);\r\n\t\tif (error) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: error\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst data = {\r\n\t\t\tname: this.state.name,\r\n\t\t\tparent: this.state.parent,\r\n\t\t\toffset: this.state.offset,\r\n\t\t\tsize: this.state.size,\r\n\t\t\tdesc_short: this.state.desc_short,\r\n\t\t\tdesc_long: this.state.desc_long,\r\n\t\t\tfields: this.state.fields\r\n\t\t};\r\n\t\t\r\n\t\tlet promise;\r\n\t\tif (this.props.op === '/edit') { // update\r\n\t\t\tpromise = regDb.set(this.props.path, data);\r\n\t\t} else { // add\r\n\t\t\tpromise = regDb.add(data);\r\n\t\t}\r\n\r\n\t\tpromise.then(() => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tdone: true,\r\n\t\t\t\terror: undefined\r\n\t\t\t});\r\n\t\t}).catch((error) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: error.message\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.done) {\r\n\t\t\treturn (\r\n\t\t\t\t<Redirect to={\"/view\" + this.state.parent + this.state.name}/>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tconst submitBtn = \r\n\t\t\t<button \r\n\t\t\t\tname=\"field-add-btn\" \r\n\t\t\t\tonClick={this.commitChange} \r\n\t\t\t\tdisabled={!this.canSubmit()}>\r\n\t\t\t\tDone\r\n\t\t\t</button>;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div className=\"reg-editor\">\r\n\t\t\t\t\t<label name=\"name-label\">Name:</label>\r\n\t\t\t\t\t<input name=\"name\" type=\"text\" required onChange={this.onInputChange} value={this.state.name || \"\"}/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<label name=\"parent-label\">Group:</label>\r\n\t\t\t\t\t{ \r\n\t\t\t\t\t\tthis.props.op === '/edit' ? \r\n\t\t\t\t\t\t<input name=\"parent\" type=\"text\" required onChange={this.onInputChange} value={this.state.parent || \"\"}/> :\r\n\t\t\t\t\t\t<label>{this.state.parent}</label>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<label name=\"offset-label\">Offset:</label>\r\n\t\t\t\t\t<input name=\"offset\" type=\"text\" placeholder=\"in hex\" required onChange={this.onInputChange} value={this.state.offset || \"\"}/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<label name=\"size-label\">Size:</label>\r\n\t\t\t\t\t<input name=\"size\" type=\"number\" min={1} max={MaxRegSize} placeholder=\"in bytes\" required onChange={this.onInputChange} value={this.state.size}/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<label name=\"desc-short-label\">Summary:</label>\r\n\t\t\t\t\t<input name=\"desc_short\" required onChange={this.onInputChange} value={this.state.desc_short || \"\"}/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<label name=\"desc-long-label\">Detail:</label>\r\n\t\t\t\t\t<textarea name=\"desc_long\" placeholder=\"optional\" onChange={this.onInputChange} value={this.state.desc_long || \"\"}/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<FieldEditor\r\n\t\t\t\t\t\tsize={this.state.size} \r\n\t\t\t\t\t\twidth={32}\r\n\t\t\t\t\t\tfields={this.state.fields}\r\n\t\t\t\t\t\taddField={this.addField}\r\n\t\t\t\t\t\tupdateField={this.updateField}\r\n\t\t\t\t\t\tdeleteField={this.deleteField}\r\n\t\t\t\t\t\tonEditing={this.onEditingField}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{ !this.state.isEditingField && submitBtn }\r\n\t\t\t\t</div>\r\n\t\t\t\t<Warning>{this.state.error}</Warning>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/*\r\n * Props:\r\n *   - size: total bits of this register\r\n *   - width: bit count per line\r\n */\r\n class FieldEditor extends Component {\r\n \tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t \r\n\t\tthis.state = {\r\n\t\t\tmode: \"init\",\r\n\t\t\tfocus: undefined,\r\n\t\t\tbegin: undefined,\r\n\t\t\tend: undefined,\r\n\t\t\tfield_name: undefined,\r\n\t\t\tfield_desc: undefined,\r\n\t\t\t\r\n\t\t\tfield_value: [],\r\n\t\t\tsymbolic_name: undefined,\r\n\t\t\tsymbolic_value: undefined,\r\n\r\n\t\t\terror: undefined\r\n \t\t}\r\n\t}\r\n\r\n\treset = () => {\r\n\t\tthis.setState({\r\n\t\t\tmode: \"init\",\r\n\t\t\tfocus: undefined,\r\n\t\t\tbegin: undefined,\r\n\t\t\tend: undefined,\r\n\t\t\tfield_name: undefined,\r\n\t\t\tfield_desc: undefined,\r\n\t\t\t\r\n\t\t\tfield_value: [],\r\n\t\t\tsymbolic_name: undefined,\r\n\t\t\tsymbolic_value: undefined,\r\n\t\t\t\r\n\t\t\terror: undefined\r\n\t\t});\r\n\r\n\t\tthis.props.onEditing(false);\r\n\t}\r\n\r\n\tvalidate = (key, val) => {\r\n\t\tconst validator = {\r\n\t\t\t'field_name': value => {\r\n\t\t\t\tif (!value || value.match(/^[a-zA-Z][a-zA-Z0-9_/ ]*$/)) {\r\n\t\t\t\t\treturn [true];\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn [false, <li key=\"field_name\"><Keyword>{value}</Keyword> is an invalid field name</li>];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet error = [];\r\n\t\t\r\n\t\tfor (let prop in validator) {\r\n\t\t\tlet rv;\r\n\t\t\tif (key === prop) {\r\n\t\t\t\trv = validator[prop](val);\r\n\t\t\t} else {\r\n\t\t\t\trv = validator[prop](this.state[prop]);\r\n\t\t\t}\r\n\r\n\t\t\tif (!rv[0]) {\r\n\t\t\t\terror.push(rv[1]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (error.length) {\r\n\t\t\treturn <ul>{error}</ul>;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tcanSubmit = () => {\r\n\t\treturn this.state.field_name && !this.state.error && (this.state.mode === 'close_field' || this.state.mode === 'close_candidate');\r\n\t}\r\n\r\n \t// Check if field [begin,end] can be added. I.e. no intersection with other fields\r\n \tcanAddField = (begin, end) => {\r\n\t\tlet isIntersect = (ra, rb) => {\r\n\t\t\treturn isInRange(ra[0], rb) || isInRange(ra[1], rb) ||\r\n\t\t\t\tisInRange(rb[0], ra) || isInRange(rb[1], ra);\r\n\t\t};\r\n\t\tconst fields = this.props.fields;\r\n\t\t\r\n\t\tfor (let i = 0; i < fields.length; i++) {\r\n\t\t\tif (this.isUpdatingField() && this.state.focus === fields[i].bits[0]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (isIntersect([begin, end], fields[i].bits)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n \t// when we click on a bit\r\n\tsetFieldRange = (pos) => {\r\n\t\tswitch (this.state.mode) {\r\n\t\tcase \"init\":\r\n\t\t\tthis.setState({\r\n\t\t\t\tmode: \"open_candidate\",\r\n\t\t\t\tbegin: pos,\r\n\t\t\t\tend: pos,\r\n\t\t\t});\r\n\t\t\tthis.props.onEditing(true);\r\n\t\t\tbreak;\r\n\t\tcase \"open_candidate\":\r\n\t\t\tif (this.canAddField(this.state.begin, pos)) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmode: \"close_candidate\",\r\n\t\t\t\t\tend: pos,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"close_candidate\":\r\n\t\t\tthis.setState({\r\n\t\t\t\tmode: \"open_candidate\",\r\n\t\t\t\tbegin: pos,\r\n\t\t\t\tend: pos\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tcase \"open_field\":\r\n\t\t\tif (this.canAddField(this.state.begin, pos)) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tmode: \"close_field\",\r\n\t\t\t\t\tend: pos,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase \"close_field\":\r\n\t\t\tthis.setState({\r\n\t\t\t\tmode: \"open_field\",\r\n\t\t\t\tbegin: pos,\r\n\t\t\t\tend: pos\r\n\t\t\t});\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// when the field is open and we hover on the bit\r\n\ttrySetFieldRange = (pos) => {\r\n\t\tswitch (this.state.mode) {\r\n\t\tcase \"open_candidate\":\r\n\t\tcase \"open_field\":\r\n\t\t\tif (this.canAddField(this.state.begin, pos)) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tend: pos\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// when we click on a field\r\n\tonStartUpdating = (pos) => {\r\n\t\tconst idx = this.props.fields.findIndex((e) => e.bits[0] === pos);\r\n\t\tconst field = this.props.fields[idx];\r\n\r\n \t\tthis.setState({\r\n \t\t\tmode: \"close_field\",\r\n \t\t\tfocus: field.bits[0],\r\n \t\t\tbegin: field.bits[0],\r\n \t\t\tend: field.bits[1],\r\n \t\t\tfield_name: field.name,\r\n\t\t\tfield_desc: field.meaning,\r\n\t\t\tfield_value: field.value || []\r\n\t\t});\r\n\t\t \r\n\t\tthis.props.onEditing(true);\r\n\t}\r\n\r\n \tonInputChange = (e) => {\r\n\t\tconst target = e.target;\r\n\t\tconst name = target.name;\r\n\t\tconst value = target.value;\r\n\r\n\t\tconsole.log(target);\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value,\r\n\t\t\terror: this.validate(name, value)\r\n\t\t});\r\n\t}\r\n\r\n\t// when \"add\" button is cicked\r\n \tonAddField = (e) => {\r\n\t\tconst bits = [this.state.begin, this.state.end].sort((a,b) => a - b);\r\n\t\tconst width = bits[1] - bits[0] + 1;\r\n\t\tconst index = this.state.field_value.findIndex(el => el.value >= Math.pow(2, width));\r\n\r\n\t\tif (index >= 0) {\r\n\t\t\tconst name  = this.state.field_value[index].name;\r\n\t\t\tconst value = this.state.field_value[index].value;\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: <li><Keyword>{name}</Keyword>: value <Keyword>{value}</Keyword> out of range</li>\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.props.addField({\r\n\t\t\t\tbits: bits,\r\n\t\t\t\tname: this.state.field_name,\r\n\t\t\t\tmeaning: this.state.field_desc,\r\n\t\t\t\tvalue: this.state.field_value\r\n\t\t\t});\r\n\r\n\t\t\t this.reset();\r\n\t\t}\r\n \t}\r\n\t \r\n\t// when \"update\" button is clicked\r\n \tonEndUpdating = () => {\r\n\t\tconst bits = [this.state.begin, this.state.end].sort((a,b) => a - b);\r\n\t\tconst width = bits[1] - bits[0] + 1;\r\n\t\tconst index = this.state.field_value.findIndex(el => el.value >= Math.pow(2, width));\r\n\t\t\r\n\t\tif (index >= 0) {\r\n\t\t\tconst name  = this.state.field_value[index].name;\r\n\t\t\tconst value = this.state.field_value[index].value;\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: <li><Keyword>{name}</Keyword>: value <Keyword>{value}</Keyword> out of range</li>\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.props.updateField(this.state.focus, {\r\n\t\t\t\tbits: bits,\r\n\t\t\t\tname: this.state.field_name,\r\n\t\t\t\tmeaning: this.state.field_desc,\r\n\t\t\t\tvalue: this.state.field_value\t\t\t \r\n\t\t\t});\r\n\r\n\t\t\tthis.reset();\r\n\t\t}\r\n \t}\r\n\r\n\t// when \"cancel\" button is clicked\r\n \tonCancelEditing = () => {\r\n \t\tthis.reset();\r\n \t}\r\n\r\n\t// when \"delete\" button is clicked\r\n \tonDeleteField = () => {\r\n \t\tthis.props.deleteField(this.state.focus);\r\n\t\t \r\n\t\tthis.reset();\r\n\t}\r\n\t \r\n\tonAddFieldValue = () => {\r\n\t\tif (!this.state.symbolic_name) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: <li>Symbolic name is not specified</li>\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.state.symbolic_name.match(/^[a-zA-Z][a-zA-Z0-9_]*$/)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: <li><Keyword>{this.state.symbolic_name}</Keyword> is not a valid symbolic name for field value</li>\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.state.field_value.find((el) => el.name.toUpperCase() === this.state.symbolic_name.toUpperCase())) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: <li>Symbolic name <Keyword>{this.state.symbolic_name}</Keyword> already exist</li>\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!this.state.symbolic_value) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: <li>Value for the symbolic name <Keyword>{this.state.symbolic_name}</Keyword> is not specified</li>\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst val = parseIntStr(this.state.symbolic_value);\r\n\t\tif (isNaN(val)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: <li><Keyword>{this.state.symbolic_value}</Keyword> is not a valid field value (i.e. decimal)</li>\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.state.field_value.find((el) => el.value === val)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: <li><Keyword>{this.state.symbolic_value}</Keyword> already has a symbolic name</li>\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tfield_value: [\r\n\t\t\t\t...prevState.field_value,\r\n\t\t\t\t{\r\n\t\t\t\t\tname: prevState.symbolic_name,\r\n\t\t\t\t\tvalue: val\r\n\t\t\t\t}\r\n\t\t\t].sort((a, b) => a.value - b.value),\r\n\t\t\tsymbolic_name: undefined,\r\n\t\t\tsymbolic_value: undefined,\r\n\r\n\t\t\terror: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tonDeleteFieldValue = (idx) => {\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tfield_value: [...prevState.field_value.slice(0, idx), ...prevState.field_value.slice(idx + 1)],\r\n\t\t\terror: undefined\r\n\t\t}));\r\n\t}\r\n\r\n \tforEachField = (action) => {\r\n\t\tthis.props.fields.forEach((field) => {\r\n\t\t\taction(field);\r\n\t\t});\r\n\t}\r\n\r\n\tforEachBit = (action) => {\r\n\t\tlet pos = 0;\r\n\t\t\r\n\t\tthis.forEachField((field) => {\r\n\t\t\tconst low  = field.bits[0];\r\n\t\t\tconst high = field.bits[1];\r\n\r\n\t\t\tfor (; pos < low; pos++) {\r\n\t\t\t\taction(pos);\r\n\t\t\t}\r\n\r\n\t\t\tpos = high + 1;\r\n\t\t});\r\n\r\n\t\tfor(; pos < Math.min(MaxRegSize, this.props.size) * 8; pos++) {\r\n\t\t\taction(pos);\r\n\t\t}\r\n\t}\r\n\r\n\tisAddingField = () => {\r\n\t\treturn this.state.mode === \"open_candidate\" || this.state.mode === \"close_candidate\";\r\n\t}\r\n\r\n\tisUpdatingField = () => {\r\n\t\treturn this.state.mode === \"open_field\" || this.state.mode === \"close_field\";\r\n\t}\r\n\r\n \trender() {\r\n\t\tlet children = [];\r\n\r\n\t\tconst highlight = (pos) => {\r\n\t\t\tif (isInRange(pos, [this.state.begin, this.state.end])) {\r\n\t\t\t\tif (this.isAddingField()) {\r\n\t\t\t\t\treturn 'adding';\r\n\t\t\t\t} else if (this.isUpdatingField()) {\r\n\t\t\t\t\treturn 'updating';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn 'none'\r\n\t\t}\r\n\r\n\t\tthis.forEachField((field) => {\r\n\t\t\tif (this.isUpdatingField() && field.bits[0] === this.state.focus) {\r\n\t\t\t\tfor (let pos = field.bits[0]; pos <= field.bits[1]; pos++) {\r\n\t\t\t\t\tchildren.push(\r\n\t\t\t\t\t\t<Bit \r\n\t\t\t\t\t\t\tkey={pos} \r\n\t\t\t\t\t\t\tpos={pos} \r\n\t\t\t\t\t\t\tvalue={0} \r\n\t\t\t\t\t\t\twidth={this.props.width}\r\n\t\t\t\t\t\t\thighlight={highlight(pos)}\r\n\t\t\t\t\t\t\tsetFieldRange={this.setFieldRange}\r\n\t\t\t\t\t\t\ttrySetFieldRange={this.trySetFieldRange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tchildren.push(\r\n\t\t\t\t\t<Field key={field.bits[0]} \r\n\t\t\t\t\t\t{...field} \r\n\t\t\t\t\t\twidth={this.props.width}\r\n\t\t\t\t\t\tonStartUpdating={this.onStartUpdating}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.forEachBit((pos) => {\r\n\t\t\tchildren.push(\r\n\t\t\t\t<Bit \r\n\t\t\t\t\tkey={pos} \r\n\t\t\t\t\tpos={pos} \r\n\t\t\t\t\tvalue={0} \r\n\t\t\t\t\twidth={this.props.width}\r\n\t\t\t\t\thighlight={highlight(pos)}\r\n\t\t\t\t\tsetFieldRange={this.setFieldRange}\r\n\t\t\t\t\ttrySetFieldRange={this.trySetFieldRange}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tlet form;\r\n\t\tlet submitBtnText;\r\n\t\tlet submitBtnAction;\r\n\r\n\t\tif (this.isAddingField()) {\r\n\t\t\tsubmitBtnText = \"Add Field\";\r\n\t\t\tsubmitBtnAction = this.onAddField;\r\n\t\t} else if (this.isUpdatingField()) {\r\n\t\t\tsubmitBtnText = \"Update Field\";\r\n\t\t\tsubmitBtnAction = this.onEndUpdating;\r\n\t\t}\r\n\r\n\t\tconst submitBtn = \r\n\t\t\t<button \r\n\t\t\t\tname=\"field-submit-btn\" \r\n\t\t\t\tonClick={submitBtnAction} \r\n\t\t\t\tdisabled={!this.canSubmit()}>\r\n\t\t\t\t{submitBtnText}\r\n\t\t\t</button>;\r\n\t\t\r\n\t\tconst cancelBtn = \r\n\t\t\t<button \r\n\t\t\t\tname=\"field-cancel-btn\" \r\n\t\t\t\tonClick={this.onCancelEditing}>\r\n\t\t\t\tCancel Editing\r\n\t\t\t</button>;\r\n\t\t\r\n\t\tconst deleteBtn = this.isUpdatingField() ?\r\n\t\t\t<button \r\n\t\t\t\tname=\"field-delete-btn\" \r\n\t\t\t\tonClick={this.onDeleteField}>\r\n\t\t\t\tDelete Field\r\n\t\t\t</button> : null;\r\n\r\n\t\tif (this.isAddingField() || this.isUpdatingField()) {\r\n\t\t\tform = \r\n\t\t\t\t<div className=\"field-form\">\r\n\t\t\t\t\t<label name=\"field-name-label\">Field Name:</label>\r\n\t\t\t\t\t<input name=\"field_name\" type=\"text\" required onChange={this.onInputChange} value={this.state.field_name || \"\"}/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<label name=\"field-desc-label\">Field Description:</label>\r\n\t\t\t\t\t<textarea name=\"field_desc\" onChange={this.onInputChange} value={this.state.field_desc || \"\"}/>\r\n\r\n\t\t\t\t\t<label>Symbolic Values:</label>\r\n\t\t\t\t\t<table className=\"symbolic-names\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t<th>Value</th>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.field_value.map((v, idx) =>\r\n\t\t\t\t\t\t\t\t\t<tr key={idx}>\r\n\t\t\t\t\t\t\t\t\t\t<td>{v.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{v.value} / 0x{v.value.toString(16).toUpperCase()}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td><button onClick={()=>this.onDeleteFieldValue(idx)}>Delete</button></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\tname=\"symbolic_name\"  \r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onInputChange} \r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.symbolic_name || \"\"}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\t\t\t\tname=\"symbolic_value\" \r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\" \r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onInputChange} \r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.symbolic_value || \"\"}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<button onClick={this.onAddFieldValue}>Add</button>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\r\n\t\t\t\t\t<div className=\"field-btns\">\r\n\t\t\t\t\t\t{submitBtn}\r\n\t\t\t\t\t\t{cancelBtn}\r\n\t\t\t\t\t\t{deleteBtn}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>;\r\n\t\t}\r\n\r\n \t\treturn (\r\n \t\t\t<div className=\"field-editor\">\r\n\t \t\t\t<RegContainer width={this.props.width} size={Math.min(MaxRegSize, this.props.size)}>\r\n\t \t\t\t\t{children}\r\n\t \t\t\t</RegContainer>\r\n\r\n\t \t\t\t{form}\r\n\r\n\t\t\t\t<Warning>{this.state.error}</Warning>\r\n\t\t\t</div>\r\n \t\t);\r\n \t}\r\n }\r\n\r\n/*\r\n * Props:\r\n *   - pos: bit offset (base 0)\r\n *   - width: bit count per line\r\n *   - value: 0 or 1\r\n */\r\n class Bit extends Component {\r\n \tonClick = (e) => {\r\n \t\tthis.props.setFieldRange(this.props.pos);\r\n \t}\r\n\r\n \tonHover = (e) => {\r\n \t\tthis.props.trySetFieldRange(this.props.pos);\r\n \t}\r\n \t\r\n \trender() {\r\n \t\tconst [row, col] = getCoordinate(this.props.pos, this.props.width);\r\n \t\tconst bitStyle = {\r\n \t\t\tgridRow: row,\r\n \t\t\tgridColumnStart: col,\r\n \t\t\tgridColumnEnd: col,\r\n \t\t};\r\n\t\t \r\n \t\treturn (\r\n \t\t\t<div className={`bit active-${this.props.highlight}`} style={bitStyle} onClick={this.onClick} onMouseOver={this.onHover}>\r\n \t\t\t\t{this.props.pos}\r\n \t\t\t</div>\r\n \t\t);\r\n \t}\r\n }\r\n\r\n export default RegEditor;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport { parsePath, splitKey } from './Utils';\r\nimport { Exporter, Deleter } from './Form';\r\n\r\n// Font Awesome\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome, faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport './NavBar.css';\r\n\r\nlibrary.add(faHome, faBars);\r\n\r\n//------------------------------------------------------------\r\nclass DropdownMenu extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"dropdown\">\r\n\t\t\t\t<button className=\"dropdown-btn\"><FontAwesomeIcon icon=\"bars\" /></button>\r\n\t\t\t\t<div className=\"dropdown-content\">\r\n\t\t\t\t\t{this.props.children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass NavBar extends Component {\r\n\t// breadcrumb navigation\r\n\tgetBreadcrumb = (op, path) => {\r\n\t\tconst isGroup = path.endsWith('/');\r\n\t\t\r\n\t\tlet segs = path.split('/');\r\n\t\tsegs.shift();\r\n\t\tif (isGroup) {\r\n\t\t\tsegs.pop();\r\n\t\t}\r\n\t\t\r\n\t\tlet links = [];\r\n\t\tfor (let i = 0; i < segs.length; i++) {\r\n\t\t\tlet dest = \"/view/\" + segs.slice(0, i + 1).join(\"/\")\r\n\t\t\tif (i + 1 === segs.length && !isGroup) {\r\n\t\t\t\t// path to a register doesn't end with '/'\r\n\t\t\t} else {\r\n\t\t\t\tdest += \"/\";\r\n\t\t\t}\r\n\r\n\t\t\tlinks.push(\r\n\t\t\t\t<li key={dest}><NavLink to={dest}>{segs[i]}</NavLink></li>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<ul className=\"nav-breadcrumb\">\r\n\t\t\t\t{links}\r\n\t\t\t</ul>\r\n\t\t);\r\n\t}\r\n\r\n\t// dropdown action menu\r\n\tgetActions = (op, path) => {\r\n\t\tconst isGroup = path.endsWith('/');\r\n\r\n\t\tif (op !== '/view') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet actions;\r\n\t\tif (isGroup) {\r\n\t\t\tactions = \r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t{path !== '/' && <Link to={\"/edit\" + path}>Edit this group</Link>}\r\n\t\t\t\t\t<Link to={'/new/group' + path}>Add new group (child)</Link>\r\n\t\t\t\t\t<Link to={'/new/register' + path}>Add new register (child)</Link>\r\n\t\t\t\t\t<Deleter path={path}>Delete (recursively)</Deleter>\r\n\t\t\t\t\t<Exporter path={path} format=\"json\">Export as JSON...</Exporter>\r\n\t\t\t\t\t<Exporter path={path} format=\"macro\">Export as Macro...</Exporter>\r\n\t\t\t\t\t<Exporter path={path} format=\"C++\">Export as C++...</Exporter>\r\n\t\t\t\t</Fragment>;\r\n\t\t} else {\r\n\t\t\tconst [parent] = splitKey(path);\r\n\t\t\tactions = \r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<Link to={\"/edit\" + path}>Edit this register</Link>\r\n\t\t\t\t\t<Link to={'/new/group' + parent}>Add new group (sibling)</Link>\r\n\t\t\t\t\t<Link to={'/new/register' + parent}>Add new register (sibling)</Link>\r\n\t\t\t\t\t<Deleter path={path}>Delete (recursively)</Deleter>\r\n\t\t\t\t\t<Exporter path={path} format=\"json\">Export as JSON...</Exporter>\r\n\t\t\t\t\t<Exporter path={path} format=\"macro\">Export as Macro...</Exporter>\r\n\t\t\t\t\t<Exporter path={path} format=\"C++\">Export as C++...</Exporter>\r\n\t\t\t\t</Fragment>;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<DropdownMenu>\r\n\t\t\t\t{actions}\r\n\t\t\t</DropdownMenu>\r\n\t\t);\r\n\t}\r\n\t\r\n\trender = () => {\r\n\t\tconst [op, path] = parsePath(this.props.location.pathname);\r\n\t\treturn (\r\n\t\t\t<div className=\"nav-container\">\r\n\t\t\t\t<NavLink className=\"home-btn\" to=\"/view/\"><FontAwesomeIcon icon=\"home\" /></NavLink>\r\n\t\t\t\t{ this.getBreadcrumb(op, path) }\r\n\t\t\t\t{ this.getActions(op, path) }\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Page404 from './Page404';\nimport DataPicker from './DataPicker';\nimport GroupViewer from './GroupViewer';\nimport RegisterViewer from './RegisterViewer';\nimport GroupEditor from './GroupEditor';\nimport RegEditor from './RegEditor';\nimport NavBar from './NavBar';\nimport { withReload } from './Utils';\n\nimport './Regview.css'\n\n//------------------------------------------------------------\nclass Regview extends Component {\n\trender() {\n\t\treturn ( \n\t\t\t<div className=\"regview\">\n\t\t\t\t<Route path=\"/:op/*\" component={NavBar} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\"                component={() => <Redirect to=\"/view/\"/>}                 exact />\n\t\t\t\t\t<Route path=\"/import\"          component={DataPicker}  />\n\t\t\t\t\t<Route path=\"/view/\"           component={withReload(GroupViewer)}    exact />\n\t\t\t\t\t<Route path=\"/view/:path(.+/)\" component={withReload(GroupViewer)}          />\n\t\t\t\t\t<Route path=\"/view/:path(.+)\"  component={withReload(RegisterViewer)}       />\n\t\t\t\t\t<Route path=\"/edit/:path(.+/)\" component={withReload(GroupEditor)}          />\n\t\t\t\t\t<Route path=\"/edit/:path(.+)\"  component={withReload(RegEditor)}            />\n\t\t\t\t\t<Route path=\"/new/group/:path*\"       component={withReload(GroupEditor)}                 />\n\t\t\t\t\t<Route path=\"/new/register/:path*\"    component={withReload(RegEditor)}    />\n\t\t\t\t\t<Route                         component={Page404}                          />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Regview;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport Regview from './components/Regview';\nimport './index.css';\n\n// React Entry\nReactDOM.render(\n\t<Router><Regview /></Router>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}